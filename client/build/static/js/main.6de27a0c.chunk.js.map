{"version":3,"sources":["data/CustomerData.js","data/MilkData.js","components/Forms/CustomerForm.js","components/Forms/MillBulkForm.js","components/Forms/MilkForm.js","api/index.js","data/InvoiceData.js","data/PaymenReceiptData.js","util/util.js","components/Modal/PaymentModal.js","components/Homepage.js","components/Navbar.js","images/cryptocurrency.png","components/Customer.js","components/MilkCategory.js","components/common/EditableTable.js","components/Forms/InvoiceForm.js","components/Modal/InvoiceDetailModal.js","components/Invoices.js","components/Stock.js","components/ListComponent.js","App.js","index.js","components/common/InputField.js","components/common/SelectField.js"],"names":["CustomerData","label","name","type","inputType","list","MilkData","defaultValue","CustomerForm","data","callback","setEditData","initialData","reduce","previous","field","useState","formData","setFormData","onChange","e","target","value","onSelectChange","useEffect","setRatesToData","rates","Object","values","onSubmit","close","a","console","log","updateCustomer","id","response","status","swal","createCustomer","reset","customerType","map","option","eval","item","text","showSearch","optionFilterProp","showArrow","filterOption","input","children","toLowerCase","indexOf","filterSort","optionA","optionB","localeCompare","customerId","span","className","onClick","icon","Title","Typography","MilkBulkFom","setRates","fetchMilkCategories","getAllMilkCategories","entity","rows","ratesObj","current","categoryId","rate","res","forEach","category","level","style","color","overflowY","rateObj","lcol","icol","MilkFom","rateDisbaled","setRateDiabled","updateMilCategory","createMilCategory","taxable","gstRate","disabled","url","window","location","hostname","API","axios","create","baseURL","UrlParamsReplace","params","queryParams","urlWithPrefix","keys","key","replace","queryParamsWithoutNull","undefined","urlSearchParams","URLSearchParams","toString","getAllCustomers","search","offset","limit","isVendor","get","getCustomersWithDues","customer","post","put","deleteCustomer","delete","deleteMilCategory","createInvoice","invoice","getAllInvoices","getInvoicesByDate","date","getInvoiceById","invoiceId","deleteInvoice","getDueInvoices","createPayments","payment","createStocks","stocks","getStocks","getStocksByDate","_get_","entityName","filters","_create_","_update_","_delete_","InvoiceData","PaymentReceiptData","sweetalertValidate","message","buttons","cancel","visible","closeModal","confirm","sweetalertMessage","sweetalertOkCancel","confirmFunction","cancelFunction","then","isConfirm","uuid","c","r","Math","random","getApiFn","page","deleteApiFn","mappingData","getTitle","column","getPageName","charAt","toUpperCase","slice","PaymentModal","setVisible","amountReceived","additionalDue","invoices","setInvoices","fetchInvoices","inv","invoiceDate","moment","format","paymentDate","onClose","columns","title","Text","ellipsis","dataIndex","width","filter","total","top","keyboard","onCancel","footer","dataSource","bordered","pagination","rowKey","record","Date","getTime","previousDue","round","due","InputField","Homepage","myTimeout","reportDate","setReportDate","milk","setMilks","customers","setCustomers","selectedCustomer","setSelectedCustomer","setStocks","currentPage","setCurrentPage","pageSize","setPageSize","setTotal","setSearch","fetchCustomers","count","clearTimeout","setTimeout","scrollableElement","document","querySelector","targetElement","addEventListener","scrollPosition","scrollLeft","length","fixed","ele","totalStocksMap","acc","carryForward","morningQuantity","eveningQuantity","totalSoldStockMap","i","invs","milkCategory","j","catId","Transaction","quantity","totalDataSource","customerColumns","render","onPayment","EditOutlined","initpageSizeOptions","pageSizeOptions","push","shift","height","overflowX","gutter","millify","scroll","x","y","showHeader","placeholder","position","onShowSizeChange","size","showSizeChanger","Navbar","activeMenu","setActiveMenu","screenSize","setScreenSize","handleResize","innerWidth","removeEventListener","to","MenuOutlined","theme","Item","HomeOutlined","UsergroupAddOutlined","MoneyCollectOutlined","BulbOutlined","StrikethroughOutlined","PayCircleFilled","Customer","setCustomrs","editData","onDelete","getElementById","scrollIntoView","onEdit","DeleteOutlined","MilkCategory","EditableRow","index","props","EditableCell","editable","handleSave","customerData","handleAdd","restProps","onSave","newValues","normal","categoryName","hsnCode","hsn","parseFloat","totalWithTax","childNode","onKeyDown","parentElement","nextSibling","childNodes","focus","Option","paddingRight","fontSize","EditableTable","setTransactions","transactions","notEditable","setDataSource","defaultColumns","_","onConfirm","newData","handleDelete","row","findIndex","splice","components","body","cell","col","onCell","__","colSpan","totalRow","marginBottom","rowClassName","InvoiceForm","invoiceNo","customerMap","newCustomers","setNewCustomers","milkMap","transaction","t","existingUser","SelectField","onSearch","handleSearch","RestOutlined","PlusOutlined","InvoiceDetailsModal","invoiceDetails","setInvoiceDetails","fetchInvoicesDetails","element","Invoices","visibleID","setVisibleID","selectedInvoiceId","setSelectedInvoiceId","customerName","getRender","Stock","fetchStocks","stock","innerHTML","align","stockData","SaveOutlined","SelectCustomers","setFilter","getCustomers","ListComponent","reload","setReload","noaction","getApi","JSON","stringify","deleteApi","openInvoiceDetail","toLocaleString","company","division","fieldData","getFieldData","Header","Layout","Content","Sider","Footer","App","collapsed","setCollapsed","collapsible","onCollapse","padding","mode","float","NotificationOutlined","MailOutlined","UserOutlined","margin","exact","path","ReactDOM","StrictMode","inputProps","Select","property","selected"],"mappings":"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","file":"static/js/main.6de27a0c.chunk.js","sourcesContent":["const CustomerData = [\n    {\n        label : \"Name\",\n        name: 'name',\n        type: 'input',\n        inputType: 'text'\n    },\n    {\n        label : \"Mobile\",\n        name: 'mobile',\n        type: 'input',\n        inputType: 'text'\n    },\n    {\n        label : \"Type\",\n        name: 'type',\n        type: 'select',\n        inputType: 'text',\n        list: \"customerType\"\n    }\n];\n\nexport default CustomerData;","const MilkData = [\n    {\n        label : \"Name\",\n        name: 'name',\n        type: 'input',\n        inputType: 'text'\n    },\n    {\n        label : \"Rates\",\n        name: 'rate',\n        type: 'input',\n        inputType: 'number'\n    },\n    {\n        label : \"Taxable\",\n        name: 'taxable',\n        type: 'select',\n        inputType: 'text',\n        list: 'taxable',\n        defaultValue: 'No'\n    },\n    {\n        label : \"GST Rate (%)\",\n        name: 'gstRate',\n        type: 'select',\n        inputType: 'number',\n        list: 'gstRate',\n        defaultValue: 0\n    },\n    {\n        label : \"HSN\",\n        name: 'hsn',\n        type: 'input',\n        inputType: 'text'\n    }\n];\n\nexport default MilkData;","import React, { useEffect, useState } from 'react';\nimport { Modal, Button, Row, Col, Table, Typography } from 'antd';\nimport InputField from '../common/InputField';\nimport { createCustomer, updateCustomer } from '../../api'; \nimport swal from 'sweetalert';\nimport CustomerData from '../../data/CustomerData';\nimport SelectField from '../common/SelectField';\nimport { PlusOutlined, RestOutlined } from '@ant-design/icons';\nimport MilkBulkFom from './MillBulkForm';\n\n\nconst CustomerForm = ({ data , callback, setEditData}) => {\n\n    const initialData = CustomerData.reduce((previous, field) => ({...previous,[field.name]: ''}),{});\n    const [formData, setFormData] = useState(initialData);\n\n    const onChange = (e) => {\n        setFormData({...formData,[e.target.name]: e.target.value});\n    }\n\n    const onSelectChange = (name, value) => {\n        setFormData({...formData,[name]: value});\n    }\n\n    useEffect(() => {\n        setFormData(data);\n    },[data])\n\n    const setRatesToData = (data) => {\n        setFormData({\n            ...formData,\n            rates: Object.values(data)\n        })\n    }\n\n    const onSubmit = async (close) => {\n        console.log(formData);\n    \n        if(data) {\n            let response = await updateCustomer(data.id,formData);\n            console.log(response);\n            if(response?.data?.status == true){\n                swal(\"Succesfully updated customer details\", \"success\");\n            }\n            else{\n                swal(\"OOPS Something Went wrong\", \"error\");\n            }\n        }\n        else{\n            let response = await createCustomer(formData);\n            console.log(response);\n            if(response?.data?.status == true){\n                swal(\"Succesfully added customer details\", \"success\");\n            }\n            else{\n                swal(\"OOPS Something Went wrong\", \"error\");\n            }\n        }\n        reset();\n        await callback();\n    }\n\n    const reset = () => {\n        setFormData(initialData);\n        setEditData(null);\n    }\n\n    const customerType =  [{ value: 'normal', name: 'Normal' }, { value: 'special', name: 'Special'} ];\n\n    return (\n        <>\n            <div id='form-div'>\n                <Row>\n                    { \n                        CustomerData.map((field) => field.type == 'input' ?\n                            <InputField\n                                label={field.label}\n                                type={field.inputType} \n                                name={field.name}\n                                onChange={onChange}\n                                key={field.name}\n                                value={formData ? formData[field.name] : ''}\n                            /> : \n                            <SelectField\n                                label={field.label}\n                                option={eval(field.list).map((item) => ({ value: item.value, text: item.name}))}\n                                showSearch\n                                optionFilterProp=\"children\"\n                                value={formData ? formData[field.name] : ''}\n                                showArrow={false}\n                                onChange={(value) => onSelectChange(field.name, value)}\n                                filterOption={(input, option) =>\n                                    option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                                }\n                                filterSort={(optionA, optionB) =>\n                                    optionA.children.toLowerCase().localeCompare(optionB.children.toLowerCase())\n                                }\n                                key={field.name}\n                            />\n                        )\n                    }     \n                </Row>\n                {\n                    formData?.type === 'special' ? <MilkBulkFom customerId={data?.id} type={formData.type} setRatesToData={setRatesToData}/> : null\n                }\n                <Row>\n                    <Col span={24} className='text-right'>\n                        <Button onClick={() => reset()} className='mr-4' icon={ <RestOutlined />}>\n                            Reset\n                        </Button>\n                        <Button type=\"primary\" onClick={() => onSubmit()} icon={ <PlusOutlined />} >\n                            { data ? 'Edit' : 'Add' } \n                        </Button>\n                    </Col>\n                \n                </Row>\n            </div>\n        </>\n    );\n};\n\nexport default CustomerForm;\n\n// TazzaLitre rate Taaza rate Slim rate Gold rate 200ml rate Double rate 250ml rate Lassi rate Shakti rate\n// LitreDahi rate 200D rate 400D rate Metro rate Rich rate Paneer rate\n// Mistidahi rate Tazza5litre rate\n","import React, { useEffect, useState } from 'react';\nimport { Modal, Button, Row, Col, Table, Typography } from 'antd';\nimport InputField from '../common/InputField';\nimport { getAllMilkCategories } from '../../api'; \nimport swal from 'sweetalert';\nconst { Title } = Typography;\n\n\n\nconst MilkBulkFom = ({ customerId , type , setRatesToData}) => {\n\n    const [rates, setRates] = useState({});\n\n    const onChange = (e, data) => {\n        const rateObj = {...rates,\n            [data.id]: {\n                name: data.name, \n                rate: e.target.value,\n                categoryId: data.categoryId,\n                id: data.id\n            }\n        }\n        setRates(rateObj);\n        setRatesToData(rateObj);\n    }\n\n    const fetchMilkCategories = async () => {\n        const response = await getAllMilkCategories(customerId);\n        const data = response?.data?.entity.rows;\n\n        const ratesObj = data.reduce((previous, current) => ({ ...previous, [customerId ? current.categoryId: current.id]: {\n            name: current.name, \n            rate: current.rate,\n            categoryId: customerId ? current.categoryId: current.id,\n            id: current.id\n        } }), {});\n\n        if(customerId){\n            const res = await getAllMilkCategories(null);\n            const actualCategory = res?.data?.entity.rows;\n            actualCategory.forEach((category) => {\n                if(!ratesObj[category.id]){\n                    ratesObj[category.id] = {\n                        name: category.name, \n                        rate: category.rate,\n                        categoryId: category.id,\n                        id: category.id\n                    }\n                }\n            })\n        }\n\n        setRates(ratesObj);\n        setRatesToData(ratesObj);\n    }\n\n    useEffect(() => {\n        if(type === 'special'){\n            fetchMilkCategories();\n        }\n    },[customerId]);\n\n\n    return (\n        <>\n            <div >\n                <Title level={4} style={{color: 'rgba(107, 114, 128, var(--tw-text-opacity))'}} className='border-b-2' >Rates</Title>\n                <Row style={{ overflowY :'auto'}} className='border-b-2 mb-2'>\n                    { \n                        Object.values(rates).map((field) =>\n                            <InputField\n                                label={field.name}\n                                type='number' \n                                name={field.name}\n                                onChange={(e) => onChange(e, field)}\n                                key={field.id}\n                                value={field.rate}\n                                lcol={2}\n                                icol={2}\n                            /> \n                        )\n                    }     \n                </Row>\n            </div>\n        </>\n    );\n};\n\nexport default MilkBulkFom;\n","import React, { useEffect, useState } from 'react';\nimport { Modal, Button, Row, Col, Table, Typography } from 'antd';\nimport InputField from '../common/InputField';\nimport { createMilCategory, updateMilCategory } from '../../api'; \nimport swal from 'sweetalert';\nimport { PlusOutlined, RestOutlined } from '@ant-design/icons';\nimport MilkData from '../../data/MilkData';\nimport SelectField from '../common/SelectField';\n\n\nconst MilkFom = ({ data , callback, setEditData}) => {\n\n    const initialData = MilkData.reduce((previous, field) => ({...previous,[field.name]: field.defaultValue ? field.defaultValue : ''}),{});\n    const [formData, setFormData] = useState(initialData);\n    const [rateDisbaled, setRateDiabled] = useState(true);\n\n    const onChange = (e) => {\n        setFormData({...formData,[e.target.name]: e.target.value});\n    }\n\n    const onSelectChange = (name, value) => {\n        if(name == 'taxable' ){\n            if( value == 'Yes') setRateDiabled(false);\n            else  setRateDiabled(true);\n        }\n\n        setFormData({...formData,[name]: value});\n        \n    }\n\n    useEffect(() => {\n        setFormData(data);\n    },[data])\n\n    const onSubmit = async (close) => {\n        console.log(formData);\n    \n        if(data) {\n            let response = await updateMilCategory(data.id,formData);\n            console.log(response);\n            if(response?.data?.status == true){\n                swal(\"Succesfully updated milk details\", \"success\");\n            }\n            else{\n                swal(\"OOPS Something Went wrong\", \"error\");\n            }\n        }\n        else{\n            let response = await createMilCategory(formData);\n            console.log(response);\n            if(response?.data?.status == true){\n                swal(\"Succesfully added milk details\", \"success\");\n            }\n            else{\n                swal(\"OOPS Something Went wrong\", \"error\");\n            }\n        }\n        reset();\n        await callback();\n    }\n\n    const reset = () => {\n        setFormData(initialData);\n        setEditData(null);\n    }\n\n    const taxable =  [{ value: 'Yes', name: 'Yes' }, { value: 'No', name: 'No'} ];\n    const gstRate =  [{ value: 0, name: '0 %' },  { value: 1, name: '1 %'}, { value: 1.5, name: '1.5 %'},\n    { value: 3, name: '3 %'}, { value: 5, name: '5 %'}, { value: 7.5, name: '7.5 %'}, { value: 12, name: '12 %'}, { value: 18, name: '18 %'} ];\n\n    return (\n        <>\n            <div id='form-div'>\n                <Row>\n                    { \n                        MilkData.map((field) => field.type == 'input' ?\n                            <InputField\n                                label={field.label}\n                                type={field.inputType} \n                                name={field.name}\n                                onChange={onChange}\n                                key={field.name}\n                                value={formData ? formData[field.name] : ''}\n                            /> :\n                            <SelectField\n                                label={field.label}\n                                option={eval(field.list).map((item) => ({ value: item.value, text: item.name}))}\n                                showSearch\n                                optionFilterProp=\"children\"\n                                value={formData ? formData[field.name] : field.defaultValue}\n                                showArrow={false}\n                                onChange={(value) => onSelectChange(field.name, value)}\n                                filterOption={(input, option) =>\n                                    option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                                }\n                                filterSort={(optionA, optionB) =>\n                                    optionA.children.toLowerCase().localeCompare(optionB.children.toLowerCase())\n                                }\n                                key={field.name}\n                                disabled={field.name == 'gstRate' ? rateDisbaled : false}\n                            />\n                        )\n                    }     \n                </Row>\n                <Row>\n                    <Col span={24} className='text-right'>\n                        <Button onClick={() => reset()} className='mr-4' icon={ <RestOutlined />}>\n                            Reset\n                        </Button>\n                        <Button type=\"primary\" onClick={() => onSubmit()} icon={ <PlusOutlined />} >\n                            { data ? 'Edit' : 'Add' } \n                        </Button>\n                    </Col>\n                \n                </Row>\n            </div>\n        </>\n    );\n};\n\nexport default MilkFom;\n\n// TazzaLitre rate Taaza rate Slim rate Gold rate 200ml rate Double rate 250ml rate Lassi rate Shakti rate\n// LitreDahi rate 200D rate 400D rate Metro rate Rich rate Paneer rate\n// Mistidahi rate Tazza5litre rate\n","import axios from 'axios';\n\nconst url = `http://${window.location.hostname}:8000`;\nconst API = axios.create({ baseURL : url});\n\n\nconst UrlParamsReplace = (url, params = {}, queryParams = {}) => {\n    let urlWithPrefix = `${url}`;\n    if (params) {\n      Object.keys(params).forEach(\n        (key) => (urlWithPrefix = urlWithPrefix.replace(`:${key}`, params[key]))\n      );\n    }\n    const queryParamsWithoutNull = {};\n    if (queryParams) {\n      Object.keys(queryParams).forEach((key) => {\n        if (queryParams[key] !== undefined && queryParams[key] !== null) {\n          queryParamsWithoutNull[key] = queryParams[key];\n        }\n      });\n      const urlSearchParams = new URLSearchParams(queryParamsWithoutNull);\n      urlWithPrefix += `?${urlSearchParams.toString()}`;\n    }\n    return urlWithPrefix;\n  };\n\nexport const getAllCustomers = (search, offset, limit, isVendor = false) => API.get(UrlParamsReplace(`/customers`, {}, { search, offset, limit, isVendor }));\nexport const getCustomersWithDues = (search, offset, limit) => API.get(UrlParamsReplace(`/customers/dues`, {}, { search, offset, limit }));\nexport const createCustomer = (customer) => API.post(\"/customers\", customer);\nexport const updateCustomer = (id, customer) => API.put(`/customers/${id}`, customer);\nexport const deleteCustomer= (id) => API.delete(`/customers/${id}`);\n\nexport const getAllMilkCategories = (customerId, search, offset, limit) => API.get(UrlParamsReplace(`/milk-category`, {}, { customerId, search, offset, limit }));\nexport const createMilCategory = (customer) => API.post(\"/milk-category\", customer);\nexport const updateMilCategory = (id, customer) => API.put(`/milk-category/${id}`, customer);\nexport const deleteMilCategory = (id) => API.delete(`/milk-category/${id}`);\n\nexport const createInvoice = (invoice) => API.post(\"/invoices\", invoice);\nexport const getAllInvoices = (type, search, offset, limit) => API.get(UrlParamsReplace(`/invoices`, {}, { type, search, offset, limit }));\nexport const getInvoicesByDate = (date) => API.get(`/invoices?date=${date}`);\nexport const getInvoiceById = (invoiceId) => API.get(`/invoices/${invoiceId}`);\nexport const deleteInvoice = (id) => API.delete(`/invoices/${id}`);\n\nexport const getDueInvoices = (customerId) => API.get(`/customers/${customerId}/unpaid-invoices`);\nexport const createPayments = (customerId, payment) => API.post(`/customers/${customerId}/payments`, payment);\n\nexport const createStocks = (stocks) => API.post(\"/stocks\", { stocks });\nexport const getStocks = (date) => API.get(`/stocks?date=${date}`);\nexport const getStocksByDate = (date) => API.get(`/stocks-by-date?date=${date}`);\n\nexport const _get_ = (entityName) => (search, offset, limit, filters) => API.get(UrlParamsReplace(`/${entityName}`, {}, { search, offset, limit, filters }));\nexport const _create_ = (entityName) => (item) => API.post(`/${entityName}`, item);\nexport const _update_ = (entityName) => (id, item) => API.put(`/${entityName}/${id}`, item);\nexport const _delete_ = (entityName) => (id) => API.delete(`/${entityName}/${id}`);\n\n","const InvoiceData = [\n    {\n        label : \"Invoice No.\",\n        name: 'invoiceNo',\n        type: 'input',\n        inputType: 'text'\n    },\n    {\n        label : \"Date\",\n        name: 'invoiceDate',\n        type: 'input',\n        inputType: 'text'\n    },\n    {\n        label : \"Customer\",\n        name: 'customerName',\n        type: 'input',\n        inputType: 'text'\n    },\n    {\n        label : \"Total Amount\",\n        name: 'total',\n        type: 'select',\n        inputType: 'text',\n        list: \"customerType\"\n    },\n    {\n        label : \"Status\",\n        name: 'paymentStatus',\n        type: 'input',\n        inputType: 'text'\n    },\n    {\n        label : \"Amount Paid\",\n        name: 'amountPaid',\n        type: 'input',\n        inputType: 'text'\n    },\n    {\n        label : \"Date Of Payment\",\n        name: 'paymentDate',\n        type: 'input',\n        inputType: 'text'\n    }\n];\n\nexport default InvoiceData;","const PaymentReceiptData = [\n    {\n        label : \"Customer\",\n        name: 'customerId',\n        type: 'input',\n        inputType: 'text'\n    },\n    {\n        label : \"Payemnt Date\",\n        name: 'createdAt',\n        type: 'input',\n        inputType: 'date'\n    },\n   \n    {\n        label : \"Amout Received\",\n        name: 'amountReceived',\n        type: 'input',\n        inputType: 'text',\n    }\n];\n\nexport default PaymentReceiptData;","import swal from 'sweetalert';\nimport { _create_, _delete_, _get_, _update_ } from '../api';\nimport PaymentReceiptData from '../data/PaymenReceiptData';\n\nexport function sweetalertValidate(message) {\n    swal({\n        text: message,\n        icon: \"error\",\n        buttons:\n        {\n            cancel: {\n                text: \"Cancel\",\n                value: null,\n                visible: false,\n                className: \"btn-sm btn-default\",\n                closeModal: true,\n            },\n            confirm: {\n                text: \"OK\",\n                value: true,\n                visible: true,\n                className: \"btn-sm btn-primary\",\n                closeModal: true\n            }\n        }\n    });\n}\n\nexport function sweetalertMessage(message) {\n    swal({\n        text: message,\n        icon: \"info\",\n        buttons:\n        {\n            cancel: {\n                text: \"Cancel\",\n                value: null,\n                visible: false,\n                className: \"btn-sm btn-default\",\n                closeModal: true,\n            },\n            confirm: {\n                text: \"OK\",\n                value: true,\n                visible: true,\n                className: \"btn-sm btn-info\",\n                closeModal: true\n            }\n        }\n    });\n}\n\nexport function sweetalertSuccess(message) {\n    swal({\n\t\ttext: \"test message\",\n\t\ticon: \"success\",\n\t\tbuttons:\n\t\t{\n\t\t\tcancel: {\n\t\t\t\ttext: \"Cancel\",\n\t\t\t\tvalue: null,\n\t\t\t\tvisible: false,\n\t\t\t\tclassName: \"btn-sm btn-default\",\n\t\t\t\tcloseModal: true,\n\t\t\t},\n\t\t\tconfirm: {\n\t\t\t\ttext: \"OK\",\n\t\t\t\tvalue: true,\n\t\t\t\tvisible: true,\n\t\t\t\tclassName: \"btn-sm btn-info\",\n\t\t\t\tcloseModal: true\n\t\t\t}\n\t\t}\n\t});\n}\n\nexport function sweetalertOkCancel(message, confirmFunction, cancelFunction) {\n    swal(\n        {\n            text: message,\n            icon: \"warning\",\n            buttons:\n            {\n                cancel: {\n                    text: \"Cancel\",\n                    value: null,\n                    visible: true,\n                    className: \"btn-sm btn-default\",\n                    closeModal: true,\n                },\n                confirm: {\n                    text: \"OK\",\n                    value: true,\n                    visible: true,\n                    className: \"btn-sm btn-danger\",\n                    closeModal: true\n                }\n            }\n        }\n    ).then(\n        function (isConfirm) {\n            if (isConfirm) {\n                confirmFunction();\n            } else {\n                cancelFunction();\n            }\n        }\n\n    );\n}\n\nexport function uuid() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n        var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n        return v.toString(16);\n    });\n}\n\nexport const getApiFn = (page) => {\n    return (page, search, offset, limit, filters) => _get_(page)(search, offset, limit, filters);\n}\n\nexport const getFieldData = (page, type) => {\n    if(page == 'payment-receipts'){\n        return PaymentReceiptData;\n    }\n}\n\nexport const deleteApiFn = (page) => {\n    return _delete_(page);\n}\n\nexport const createApiFn = (page) => {\n    return _create_(page);\n}\n\nexport const updateApiFn = (page) => {\n    return _update_(page);\n}\n\nexport const mappingData = (page, data) => {\n    return { ...data };\n}\n\nexport const getTitle = (column, page) => {\n    if((page == 'purchase' || page == 'payments') && (column.name == 'customerName' || column.name == 'customerCode')){\n       return column.label.replace('Customer','Vendor');\n    }\n    if(page == 'payments' && (column.name == 'receiptDate' || column.name == 'via')){\n        return column.label.replace('Receipt','Payment');\n    }\n\n    if((page == 'vendor') && (column.name == 'name' || column.name == 'code')){\n        return column.label.replace('Customer','Vendor');\n     }\n\n    return  column.label;\n}\n\nexport const getPageName = (page) => {\n    if(page === 'payment-receipts'){\n        return 'Payments History';\n    }\n    return page.charAt(0).toUpperCase() + page.slice(1);\n}\n","import React, { useEffect, useState } from 'react';\nimport { Modal, Button, Row, Col, Table, Typography } from 'antd';\nimport InputField from '../common/InputField';\nimport { createPayments, getDueInvoices } from '../../api'; \nimport moment from 'moment';\nimport swal from 'sweetalert';\nimport InvoiceData from '../../data/InvoiceData';\nimport { sweetalertOkCancel, sweetalertSuccess, sweetalertValidate } from '../../util/util';\n\nconst { Title } = Typography;\n\n\nconst PaymentModal = ({ visible , setVisible , customer , callback}) => {\n    const initialData = {\n        amountReceived: 0,\n        additionalDue: 0\n    };\n    const [formData, setFormData] = useState(initialData);\n    const [invoices, setInvoices] = useState([]);\n\n    const onChange = (e) => {\n        setFormData({...formData,[e.target.name]: e.target.value});\n    }\n\n    const fetchInvoices = async (customer) => {\n        const response = await getDueInvoices(customer?.id);\n        console.log(response);\n        setInvoices(response?.data?.entity.map((inv) => ({\n            ...inv,\n            invoiceDate: inv.invoiceDate? moment(inv.invoiceDate).format('DD-MM-YYYY') : null,\n            paymentDate: inv.paymentDate ? moment(inv.paymentDate).format('DD-MM-YYYY') : null\n        })));\n    }\n\n    useEffect(() => {\n        if(customer && visible){\n            fetchInvoices(customer);\n        }\n        \n    },[customer, visible])\n\n    const onSubmit = async (close) => {\n        console.log(formData);\n    \n        \n        let response = await createPayments(customer.id, formData);\n        console.log(response);\n        if(response?.data?.status == true){\n            swal(\"Succesfully Payment done\", 'success');\n        }\n        else{\n            swal(\"OOPS Something Went wrong\", 'error');\n        }\n        \n\n        if(close) setVisible(false);\n\n        await callback();\n        setFormData(initialData);\n    }\n\n    const onClose = () => {\n        sweetalertOkCancel(\n            'Are you sure you want to close without adding amount received ?',\n            () => {\n                setVisible(false)\n            },\n            () => {}\n        );\n    }\n\n    const fieldData = InvoiceData;\n    const columns = fieldData.map((column) => ({\n        title:  ( \n            <Typography.Text ellipsis={true} title={column.label}>\n                {column.label}\n            </Typography.Text>\n        ),\n        dataIndex: column.name,\n        key: column.name,\n        width: '150px'\n    })).filter((column) => column.dataIndex !== 'customerName');\n\n    const totalDue = invoices.reduce((total, invoice) => invoice.total + total, 0);\n\n    return (\n        <>\n        <Modal\n            title={`Payment`}\n            visible={visible}\n            width={\"50%\"}\n            style={{ top: 75 }}\n            keyboard={false}\n            onCancel={() => onClose()}\n            footer={[\n                <Button key=\"cancel\" onClick={() => onClose()}>\n                    Cancel\n                </Button>,\n                <Button key=\"savclose\" type=\"primary\" onClick={() => onSubmit(true)}>\n                    Save\n                </Button>,\n                ]}\n        >\n            <div className=\"site-layout-background p-5 mt-1\">\n                <Title level={3} style={{color: 'rgba(107, 114, 128, var(--tw-text-opacity))'}} className='border-b-2' >{customer?.name}'s Due Invoices</Title>\n                <Row className=\"w-full\">\n                    <Col span={24}>\n                        <Table\n                            dataSource={invoices} \n                            columns={columns}\n                            bordered\n                            pagination={ {}}\n                            rowKey={(record) => record.id + (new Date().getTime() + Math.random() * 10000)}\n                        />\n                    </Col>\n                </Row>\n                <Row className=\"w-full\">\n                    { customer?.previousDue > 0 ? \n                        <>\n                            <Col span={24}>\n                                <Title level={4} style={{color: 'rgba(107, 114, 128, var(--tw-text-opacity))'}}  >\n                                { `Previous Due : ${customer?.previousDue ? Math.round(customer?.previousDue) : 0}`}\n                                </Title>\n                            </Col>\n                            <Col span={24}>\n                                <Title level={4} style={{color: 'rgba(107, 114, 128, var(--tw-text-opacity))'}}  >\n                                { `Due : ${ customer?.due >= 0 ?  Math.round(customer?.due - customer?.previousDue) : 0 }`}\n                                </Title>\n                            </Col>\n                        </> : null\n                    }\n\n                    <Col span={24}>\n                        <Title level={4} style={{color: 'rgba(107, 114, 128, var(--tw-text-opacity))'}}  >\n                           { customer?.due >= 0 ? `Total Due : ${customer?.due}` : `Total Advance : ${-customer?.due}`}\n                        </Title>\n                    </Col>\n                   \n                    <InputField\n                        label={'Amount Received'}\n                        type={'number'} \n                        name={'amountReceived'}\n                        onChange={onChange}\n                        key={'amountReceived'}\n                        value={formData['amountReceived']}\n                        lcol={8}\n                        icol={16}\n                    />\n                     <InputField\n                        label={'Previous Due'}\n                        type={'number'} \n                        name={'additionalDue'}\n                        onChange={onChange}\n                        key={'additionalDue'}\n                        value={formData['additionalDue']}\n                        lcol={8}\n                        icol={16}\n                    />\n                </Row> \n            </div>\n                   \n        </Modal>\n        </>\n    );\n};\n\nexport default PaymentModal;","import React, { useEffect, useState } from 'react';\nimport millify from 'millify';\nimport { Typography, Row, Col, Statistic, Table, Button, Input } from 'antd';\nimport { Link } from 'react-router-dom';\nimport { getAllMilkCategories, getCustomersWithDues, getInvoicesByDate, getStocksByDate } from '../api';\nimport moment from 'moment';\nimport PaymentModal from './Modal/PaymentModal';\nimport { EditOutlined } from '@ant-design/icons';\nimport { uuid } from '../util/util';\n\nconst { Title } = Typography;\n\nconst Homepage = () => {\n\n    const [reportDate, setReportDate] = useState(moment().format('YYYY-MM-DD'))\n \n    const [invoices, setInvoices] = useState([]);\n    const [milk, setMilks] = useState([]);\n    const [customers, setCustomers] = useState([]);\n    const [visible, setVisible] = useState(false);\n    const [selectedCustomer, setSelectedCustomer] = useState(null);\n    const [stocks, setStocks] = useState([]);\n\n    const [currentPage, setCurrentPage] = useState(1);\n    const [pageSize, setPageSize] = useState(20);\n    const [total, setTotal] = useState(0);\n\n    const [search, setSearch] = useState('');\n\n    const fetchInvoices = async (date) => {\n        const response = await getInvoicesByDate(date);\n        console.log(response);\n        setInvoices(response?.data?.entity);\n    }\n\n    const fetchMilkCategories = async () => {\n      const response = await getAllMilkCategories();\n      setMilks(response?.data?.entity.rows);\n    }\n\n    const fetchCustomers = async (date) => {\n      const response = await getCustomersWithDues(search, (currentPage - 1) * pageSize, pageSize );\n      console.log(response);\n      setCustomers(response?.data?.entity.rows);\n      setTotal(response?.data?.entity.count);\n  }\n    const getStocks = async (date) => {\n      const response = await getStocksByDate(date);\n      console.log(response);\n      setStocks(response?.data?.entity);\n    } \n\n    const onChangeReportDate = (e) => {\n      setReportDate(e.target.value);\n    }\n    \n    let myTimeout;\n    useEffect(async () => {\n        await fetchMilkCategories();\n        await fetchInvoices(reportDate);\n        await getStocks(reportDate);\n\n        if(myTimeout) clearTimeout(myTimeout);\n        myTimeout = setTimeout(() => {\n\n          const scrollableElement = document.querySelector('#total-table > div > div > div > div > div > div > div');\n          const targetElement = document.querySelector('#report-table > div > div > div > div > div > div > div.ant-table-body');\n    \n          scrollableElement.addEventListener('scroll', () => {\n            const scrollPosition = scrollableElement.scrollLeft;\n    \n            targetElement.scrollLeft = scrollPosition;\n          });\n    \n        }, 1000);\n\n        \n    },[reportDate]);\n\n    useEffect(() => {\n      fetchCustomers();\n    },[currentPage, pageSize, search]);\n\n    const columns = milk.length > 0 ? [{\n          title:  ( \n              <Typography.Text ellipsis={true} title={'Customers'}>\n                  {'Customers'}\n              </Typography.Text>\n          ),\n          dataIndex: 'customer',\n          key: 'customer',\n          width: '150px',\n          fixed: 'left',\n      },\n      ...(milk.map((ele) => ({\n          title:  ( \n            <Typography.Text ellipsis={true} title={ele.name}>\n                {ele.name}\n            </Typography.Text>\n          ),\n          dataIndex: ele.id,\n          key: ele.id,\n          width: '150px'\n        })))] : [];\n\n\n    const totalStocksMap = stocks.reduce((acc, ele) => ({ ...acc, [ele.categoryId]: ele.carryForward + ele.morningQuantity + ele.eveningQuantity }), {});\n    const totalSoldStockMap = {};\n    for(let i = 0; i < milk.length ; i++){\n      totalSoldStockMap[milk[i].id] = 0;\n    }\n\n    const dataSource = invoices.map((customer) => {\n      const data = {\n        customer: customer.name\n      }\n      for(let i = 0; i < milk.length ; i++){\n        data[milk[i].id] = 0;\n      }\n      const invs = customer.invoices;\n      for(let i = 0; i < invs.length ; i++){\n        const milkCategory = invs[i].milkCategory;\n        for(let j = 0; j < milkCategory.length ; j++){\n          const catId = milkCategory[j].categoryId || milkCategory[j].id;\n          if(data[catId] == undefined){\n            data[catId] = 0;\n          }\n          data[catId] += milkCategory[j].Transaction.quantity;\n          totalSoldStockMap[catId] += milkCategory[j].Transaction.quantity;\n        }\n      }\n      return data;\n    });\n\n    const totalDataSource = [{\n      id: uuid(),\n      customer: 'Total Stock',\n      ...totalStocksMap\n    },\n    {\n      id: uuid(),\n      customer: 'Total Sold',\n      ...totalSoldStockMap\n    },\n    {\n      id: uuid(),\n      customer: 'Total Remaining',\n      ...Object.keys(totalStocksMap).reduce((acc, ele) => ({ ...acc, [ele]: totalStocksMap[ele] - totalSoldStockMap[ele] }), {})\n    }]\n    const customerColumns = [{\n      title:  ( \n          <Typography.Text ellipsis={true} title={'Customers'}>\n              {'Customers'}\n          </Typography.Text>\n      ),\n      dataIndex: 'name',\n      key: 'customer',\n      width: '40%'\n    },\n    {\n      title:  ( \n          <Typography.Text ellipsis={true} title={'Dues'}>\n              {'Due / Advance'}\n          </Typography.Text>\n      ),\n      key: 'dues',\n      width: '40%',\n      render: (data) => {\n        if(data.due == 0 || data.due == null) return  <div key={'due'+data.id}> {data.due} </div>;\n        return data.due > 0 ?\n         <div key={'due'+data.id} className='text-red-800'>{data.due} (Due)</div> :\n         <div key={'due'+data.id} className='text-green-800'>{-data.due} (Advance)</div>;\n      }\n    },\n    {\n      title: 'Payments',\n      key: 'operation',\n      width: '10%',\n      render: (data) => {\n          return (\n              <div className=\"float-right\">\n                  <Button key={'edit'+data.id} type=\"primary\" onClick={() => onPayment(data)} title=\"Edit\">\n                      <EditOutlined /> Pay\n                  </Button>\n              </div>\n          );\n      }\n    }\n    ];\n\n    const onPayment = (customer) => {\n      setSelectedCustomer(customer)\n      setVisible(true);\n    }\n\n    const handlePageChange = (page) => {\n      setCurrentPage(page);\n    };\n  \n    const handlePageSizeChange = (current, size) => {\n      setPageSize(size);\n      setCurrentPage(1);\n    };\n\n  \n    const initpageSizeOptions = [10, 20, 50, 100];\n    const pageSizeOptions = [];\n    while(initpageSizeOptions.length > 0 && initpageSizeOptions[0] < total ){\n        pageSizeOptions.push(initpageSizeOptions[0] + '');\n        initpageSizeOptions.shift();\n    }\n    if(total > 10) pageSizeOptions.push( total + '');\n\n    return (\n      <>\n          <div  style={{ height: 'calc(100vh - 150px)', overflowY :'auto', overflowX: 'hidden'}}>\n          <Title level={2} className=\"heading\" id='mainheader'>Today's Report</Title>\n            <Row gutter={[32, 32]}>\n                  <Col span={4}><Statistic title=\"Total Collection\" value={ millify(0) }/></Col>\n                  <Col span={4}><Statistic title=\"Total Stocks\" value={millify( 0)}/></Col>\n                  <Col span={4}><Statistic title=\"Total Stocks Left\" value={millify( 0)}/></Col>\n                  <Col span={4}><Statistic title=\"Total Invoices Generated\" value={millify( 0)}/></Col>\n                  <Col span={4}><Statistic title=\"Total New Customers Added\" value={millify( 0)}/></Col>\n            </Row>\n            <div className=\"site-layout-background p-5 mt-1\">\n              <div style={{color: 'rgba(107, 114, 128, var(--tw-text-opacity))'}} className='flex border-b-2' >\n                <Title level={3} >Sales Report {/*moment(reportDate).format('DD-MM-YYYY')*/}</Title>\n                <div className=''>\n                  <Row>\n                    <Input\n                        type={'date'} \n                        name={'reportDate'}\n                        onChange={onChangeReportDate}\n                        key={'invoiceDate'}\n                        value={reportDate}\n                        className='ml-2'\n                      /> \n                  </Row>\n                </div>\n                \n                \n              </div>\n               \n                <Row className=\"w-full overflow-y-auto \" id='report-table'>\n                    <Col span={24}>\n                        <Table\n                            dataSource={dataSource} \n                            columns={columns}\n                            bordered\n                            scroll={{ x: 1600, y: 384 }}\n                            pagination={false}\n                            rowKey={(record) => record.id + (new Date().getTime() + Math.random() * 10000)}\n                        />\n                    </Col>\n                </Row>\n\n                <Row className=\"w-full overflow-y-auto \" id=\"total-table\">\n                    <Col span={24}>\n                        <Table\n                            dataSource={totalDataSource} \n                            columns={columns}\n                            bordered\n                            scroll={{ x: 1600}}\n                            pagination={false}\n                            rowKey={(record) => record.id + (new Date().getTime() + Math.random() * 10000)}\n                            showHeader={false}\n                        />\n                    </Col>\n                </Row> \n            </div>\n\n            <div className=\"site-layout-background p-5 mt-1\">\n              <div style={{color: 'rgba(107, 114, 128, var(--tw-text-opacity))'}} className='border-b-2' >\n                <Title level={3} >All Customers</Title>\n              </div>\n              <div className='mb-2'>\n                    <Row className=\"w-full\">\n                        <Col span={12}>\n                            <Input\n                                placeholder=\"Search...\"\n                                value={search}\n                                onChange={e => setSearch(e.target.value)}\n                            />\n                        </Col>\n                    </Row>\n                </div>\n                <Row className=\"w-full\">\n                    <Col span={24}>\n                        <Table\n                            dataSource={customers} \n                            columns={customerColumns}\n                            bordered\n                            pagination={{ \n                              position: ['bottomRight', 'topRight'], \n                              pageSizeOptions,\n                              current: currentPage,\n                              pageSize: pageSize,\n                              onChange: handlePageChange,\n                              onShowSizeChange: handlePageSizeChange,\n                              total,\n                              showSizeChanger: true\n                           }}\n                            rowKey={(record) => record.id + (new Date().getTime() + Math.random() * 10000)}\n                        />\n                    </Col>\n                </Row>\n                <PaymentModal visible={visible} setVisible={setVisible} customer={selectedCustomer}  callback={fetchCustomers}/> \n            </div>\n          </div>\n      </>\n    );\n};\n\nexport default Homepage;\n\n\n\n","import React, { useState, useEffect } from 'react';\nimport { Button, Menu, Typography, Avatar } from 'antd';\nimport { Link } from 'react-router-dom';\nimport { HomeOutlined, MoneyCollectOutlined, BulbOutlined, FundOutlined, MenuOutlined, UsergroupAddOutlined, StrikethroughOutlined, PayCircleFilled } from '@ant-design/icons';\n\nimport icon from '../images/cryptocurrency.png';\n\nconst Navbar = () => {\n  const [activeMenu, setActiveMenu] = useState(true);\n  const [screenSize, setScreenSize] = useState(undefined);\n\n  useEffect(() => {\n    const handleResize = () => setScreenSize(window.innerWidth);\n\n    window.addEventListener('resize', handleResize);\n\n    handleResize();\n\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  useEffect(() => {\n    if (screenSize <= 800) {\n      setActiveMenu(false);\n    } else {\n      setActiveMenu(true);\n    }\n  }, [screenSize]);\n\n  return (\n    <div className=\"nav-container  h-screen\">\n      <div className=\"logo-container\">\n        <Typography.Title level={2} className=\"logo\"><Link to=\"/\">AMMS</Link></Typography.Title>\n        <Button className=\"menu-control-container\" onClick={() => setActiveMenu(!activeMenu)}><MenuOutlined /></Button>\n      </div>\n      {activeMenu && (\n      <Menu theme=\"dark\" >\n        <Menu.Item icon={<HomeOutlined />}>\n          <Link to=\"/\">Home</Link>\n        </Menu.Item>\n        <Menu.Item icon={<UsergroupAddOutlined />}>\n          <Link to=\"/customers\">Customers</Link>\n        </Menu.Item>\n        <Menu.Item icon={<MoneyCollectOutlined />}>\n          <Link to=\"/invoices\">Invoices</Link>\n        </Menu.Item>\n        <Menu.Item icon={<BulbOutlined />}>\n          <Link to=\"/milk-category\">Milk Rates</Link>\n        </Menu.Item>\n        <Menu.Item icon={<StrikethroughOutlined />}>\n          <Link to=\"/stocks\">Stocks</Link>\n        </Menu.Item>\n        <Menu.Item icon={<PayCircleFilled />}>\n          <Link to=\"/payments\">Payments History</Link>\n        </Menu.Item>\n        <Menu.Item icon={<PayCircleFilled />}>\n          <Link to=\"/purchases\">Purchase</Link>\n        </Menu.Item>\n      </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default Navbar;\n","export default __webpack_public_path__ + \"static/media/cryptocurrency.1548aced.png\";","import React, { useEffect, useState } from 'react';\nimport millify from 'millify';\nimport { Typography, Row, Col, Statistic, Table, Button, Input } from 'antd';\nimport CustomerForm from './Forms/CustomerForm';\nimport { deleteCustomer, getAllCustomers } from '../api';\nimport CustomerData from '../data/CustomerData';\nimport { DeleteOutlined, EditOutlined } from '@ant-design/icons';\nimport { sweetalertMessage, sweetalertValidate } from '../util/util';\n\nconst { Title } = Typography;\n\nconst Customer = () => {\n\n    const [customers, setCustomrs] = useState(null);\n    const [editData, setEditData] = useState(null);\n\n    const [currentPage, setCurrentPage] = useState(1);\n    const [pageSize, setPageSize] = useState(20);\n    const [total, setTotal] = useState(0);\n\n    const [search, setSearch] = useState('');\n\n    const fetchCustomers = async () => {\n        const response = await getAllCustomers(search, (currentPage - 1) * pageSize, pageSize);\n        setCustomrs(response?.data?.entity.rows);\n        setTotal(response?.data?.entity.count);\n    }\n\n    useEffect(() => {\n        fetchCustomers();\n      },[currentPage, pageSize, search]);\n\n    const onEdit = (data) => {\n        setEditData({...data});\n        setTimeout(() => document.getElementById('form-div').scrollIntoView(), 2);\n    }\n\n    const  onDelete = async (data) => {\n        const isConfirm = confirm('Are you sure you want to delete ?')\n        if(isConfirm){\n            const response = await deleteCustomer(data.id);\n            if(response?.data?.status){\n                sweetalertMessage('Succesfully Deleted')\n            }\n            else{\n                sweetalertValidate('OOPS!! Something went wrong')\n            }\n            fetchCustomers();\n        } \n    }\n\n    const fieldData = CustomerData;\n    const columns = fieldData.map((column) => ({\n        title:  ( \n            <Typography.Text ellipsis={true} title={column.label}>\n                {column.label}\n            </Typography.Text>\n        ),\n        dataIndex: column.name,\n        key: column.name,\n        width: '150px'\n    }));\n\n    columns.push({\n        title: 'Action',\n        key: 'operation',\n        width: 10,\n        render: (data) => {\n            return (\n                <div className=\"float-right\">\n                    <Button key={'edit'+data.id} type=\"primary\" onClick={() => onEdit(data)} title=\"Edit\">\n                        <EditOutlined />\n                    </Button>\n                    \n                    <Button key={'delete'+data.id} type=\"secondary\" onClick={() => onDelete(data)} className=\"ml-2\" title=\"Delete\">\n                        <DeleteOutlined />\n                    </Button>\n                </div>\n            );\n        },\n    });\n\n    const handlePageChange = (page) => {\n        setCurrentPage(page);\n      };\n    \n      const handlePageSizeChange = (current, size) => {\n        setPageSize(size);\n        setCurrentPage(1);\n      };\n  \n    \n      const initpageSizeOptions = [10, 20, 50, 100];\n      const pageSizeOptions = [];\n      while(initpageSizeOptions.length > 0 && initpageSizeOptions[0] < total ){\n          pageSizeOptions.push(initpageSizeOptions[0] + '');\n          initpageSizeOptions.shift();\n      }\n      if(total > 10) pageSizeOptions.push( total + '');\n\n    return (\n        <div  style={{ height: 'calc(100vh - 150px)', overflowY :'auto'}}>\n            <div className=\"site-layout-background p-5\">\n                <Title level={3} style={{color: 'rgba(107, 114, 128, var(--tw-text-opacity))'}} className='border-b-2' >{editData ? 'Edit' : 'Add'} Customer { editData ? `(${editData.name})`: '' }</Title>\n                <CustomerForm data={editData} callback={fetchCustomers} setEditData={setEditData}/>\n            </div>\n            <div className=\"site-layout-background p-5 mt-1\">\n                <Title level={3} style={{color: 'rgba(107, 114, 128, var(--tw-text-opacity))'}} className='border-b-2' >Customers</Title>\n                <div className='mb-2'>\n                    <Row className=\"w-full\">\n                        <Col span={12}>\n                            <Input\n                                placeholder=\"Search...\"\n                                value={search}\n                                onChange={e => setSearch(e.target.value)}\n                            />\n                        </Col>\n                    </Row>\n                </div>\n                <Row className=\"w-full\">\n                    <Col span={24}>\n                        <Table\n                            dataSource={customers} \n                            columns={columns}\n                            bordered\n                            pagination={{ \n                                position: ['bottomRight', 'topRight'], \n                                pageSizeOptions,\n                                current: currentPage,\n                                pageSize: pageSize,\n                                onChange: handlePageChange,\n                                onShowSizeChange: handlePageSizeChange,\n                                total,\n                                showSizeChanger: true\n                             }}\n                            rowKey={(record) => record.id + (new Date().getTime() + Math.random() * 10000)}\n                        />\n                    </Col>\n                </Row> \n            </div>\n        </div>\n    );\n};\n\nexport default Customer;\n","import React, { useEffect, useState } from 'react';\nimport millify from 'millify';\nimport { Typography, Row, Col, Statistic, Table, Button, Input } from 'antd';\nimport { deleteMilCategory, getAllMilkCategories } from '../api';\nimport { DeleteOutlined, EditOutlined } from '@ant-design/icons';\nimport MilkData from '../data/MilkData';\nimport MilkFom from './Forms/MilkForm';\nimport { sweetalertMessage, sweetalertValidate } from '../util/util';\n\nconst { Title } = Typography;\n\nconst MilkCategory = () => {\n\n    const [milk, setMilks] = useState(null);\n    const [editData, setEditData] = useState(null);\n\n\n    const [currentPage, setCurrentPage] = useState(1);\n    const [pageSize, setPageSize] = useState(20);\n    const [total, setTotal] = useState(0);\n\n    const [search, setSearch] = useState('');\n\n\n    const fetchMilkCategories = async () => {\n        const response = await getAllMilkCategories(null, search, (currentPage - 1) * pageSize, pageSize);\n        setMilks(response?.data?.entity.rows);\n        setTotal(response?.data?.entity.count);\n    }\n\n    useEffect(() => {\n        fetchMilkCategories();\n    },[currentPage, pageSize, search]);\n\n\n    const onEdit = (data) => {\n        setEditData({...data});\n        setTimeout(() => document.getElementById('form-div').scrollIntoView(), 2);\n    }\n\n    const  onDelete = async (data) => {\n        const isConfirm = confirm('Are you sure you want to delete ?')\n        if(isConfirm){\n            const response = await deleteMilCategory(data.id);\n            if(response?.data?.status){\n                sweetalertMessage('Succesfully Deleted')\n            }\n            else{\n                sweetalertValidate('OOPS!! Something went wrong')\n            }\n            fetchMilkCategories();\n        } \n    }\n\n    const fieldData = MilkData;\n    const columns = fieldData.map((column) => ({\n        title:  ( \n            <Typography.Text ellipsis={true} title={column.label}>\n                {column.label}\n            </Typography.Text>\n        ),\n        dataIndex: column.name,\n        key: column.name,\n        width: '150px'\n    }));\n\n    columns.push({\n        title: 'Action',\n        key: 'operation',\n        width: 10,\n        render: (data) => {\n            return (\n                <div className=\"float-right\">\n                    <Button key={'edit'+data.id} type=\"primary\" onClick={() => onEdit(data)} title=\"Edit\">\n                        <EditOutlined />\n                    </Button>\n                    \n                    <Button key={'delete'+data.id} type=\"secondary\" onClick={() => onDelete(data)} className=\"ml-2\" title=\"Delete\">\n                        <DeleteOutlined />\n                    </Button>\n                </div>\n            );\n        },\n    });\n\n\n    const handlePageChange = (page) => {\n        setCurrentPage(page);\n      };\n    \n      const handlePageSizeChange = (current, size) => {\n        setPageSize(size);\n        setCurrentPage(1);\n      };\n  \n    \n      const initpageSizeOptions = [10, 20, 50, 100];\n      const pageSizeOptions = [];\n      while(initpageSizeOptions.length > 0 && initpageSizeOptions[0] < total ){\n          pageSizeOptions.push(initpageSizeOptions[0] + '');\n          initpageSizeOptions.shift();\n      }\n      if(total > 10) pageSizeOptions.push( total + '');\n\n    return (\n        <div style={{ height: 'calc(100vh - 150px)', overflowY :'auto'}}>\n            <div className=\"site-layout-background p-5\">\n                <Title level={3} style={{color: 'rgba(107, 114, 128, var(--tw-text-opacity))'}} className='border-b-2' >{editData ? 'Edit' : 'Add'} Milk Category { editData ? `(${editData.name})`: '' }</Title>\n                <MilkFom data={editData} callback={fetchMilkCategories} setEditData={setEditData}/>\n            </div>\n            <div className=\"site-layout-background p-5 mt-1\">\n                <Title level={3} style={{color: 'rgba(107, 114, 128, var(--tw-text-opacity))'}} className='border-b-2' >Milk Categories</Title>\n                <div className='mb-2'>\n                    <Row className=\"w-full\">\n                        <Col span={12}>\n                            <Input\n                                placeholder=\"Search...\"\n                                value={search}\n                                onChange={e => setSearch(e.target.value)}\n                            />\n                        </Col>\n                    </Row>\n                </div>\n                <Row className=\"w-full\">\n                    <Col span={24}>\n                        <Table\n                            dataSource={milk} \n                            columns={columns}\n                            bordered\n                            pagination={{ \n                                position: ['bottomRight', 'topRight'], \n                                pageSizeOptions,\n                                current: currentPage,\n                                pageSize: pageSize,\n                                onChange: handlePageChange,\n                                onShowSizeChange: handlePageSizeChange,\n                                total,\n                                showSizeChanger: true\n                             }}\n                            rowKey={(record) => record.id + (new Date().getTime() + Math.random() * 10000)}\n                        />\n                    </Col>\n                </Row> \n            </div>\n        </div>\n    );\n};\n\nexport default MilkCategory;\n","import React, { useContext, useEffect, useRef, useState } from 'react';\nimport { Button, Form, Input, Popconfirm, Select, Table } from 'antd';\nimport { uuid } from '../../util/util';\n\nconst moveFocusToNextInput = (e) => {\n    \n}\nconst EditableRow = ({ index, ...props }) => {\n  return (\n        <tr {...props} />\n  );\n};\n\nconst EditableCell = ({\n  title,\n  editable,\n  children,\n  dataIndex,\n  record,\n  handleSave,\n  customerData,\n  milk,\n  handleAdd,\n  ...restProps\n}) => {\n\n  const onSave = (name, value) => {\n    let newValues = {};\n    if( dataIndex === 'categoryName'){\n        const gstRate = customerData.type == 'special' ? milk[value].normal.gstRate : milk[value].gstRate;\n        newValues = { categoryName: milk[value].name, categoryId: value, rate: milk[value].rate, gstRate, hsnCode: milk[value].hsn };\n        if(record.quantity != undefined){\n          newValues.total = Math.round(parseFloat(newValues.rate) * parseFloat(record.quantity) * 10) / 10;\n          newValues.totalWithTax = Math.round((newValues.total + (newValues.total * newValues.gstRate) / 100) * 10) / 10;\n        }\n    }\n\n    if(dataIndex == 'quantity' ){\n      newValues = { quantity: value };\n      if(record.rate != undefined){\n        newValues.total =  Math.round(parseFloat(record.rate) * parseFloat(value) * 10) / 10;\n        newValues.totalWithTax = Math.round((newValues.total + (newValues.total * record.gstRate) / 100) * 10) / 10 ;\n      }\n      \n    }\n\n    if(dataIndex == 'rate'){\n      newValues = { rate: value };\n      if(record.quantity != undefined){\n        newValues.total =  Math.round(parseFloat(value) * parseFloat(record.quantity) * 10) / 10;\n        newValues.totalWithTax = Math.round((newValues.total + (newValues.total * record.gstRate) / 100) * 10) / 10 ;\n      }\n    }\n\n    handleSave({ ...record, ...newValues });\n  };\n    let childNode = children;\n\n    if (editable) {\n        //childNode = editing ? (\n        childNode = record.categoryName != 'Total Amount' ?  ( <>\n            { dataIndex !== 'categoryName' ? \n                <Input \n                  type='number' \n                  className=\"w-full\" \n                  onChange={(e) => onSave(dataIndex, e.target.value)} \n                  value={record[dataIndex]}\n                  onKeyDown={(e) => {\n                    if (e.key === 'Enter' && dataIndex === 'quantity') {\n                      handleAdd();\n                      setTimeout(() => {\n                        e.target.parentElement.parentElement.nextSibling.children[0].childNodes[0].childNodes[0].childNodes[0].childNodes[0].focus();\n                      }, 10)\n                      \n                    }\n                  }}\n                /> :\n                <Select\n                    label={'Customer'}\n                    editable\n                    showSearch\n                    optionFilterProp=\"children\"\n                    showArrow={false}\n                    onChange={(value) => onSave(dataIndex, value)}\n                    filterOption={(input, option) =>\n                        option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                    }\n                    filterSort={(optionA, optionB) =>\n                        optionA.children.toLowerCase().localeCompare(optionB.children.toLowerCase())\n                    }\n                    key={'customerId'}\n                    className=\"w-full\"\n                >\n                    { Object.values(milk).map((ele,index) => <Option value={ele.id} key={index}>{ele.name}</Option>) }\n                </Select>\n            }\n        </>\n        ) : (\n        <div\n            className=\"editable-cell-value-wrap font-bold\"\n            style={{\n              paddingRight: 24,\n              fontSize: '16px',\n            }}\n        >\n            {children}\n        </div>\n        );\n    }\n\n    return <td {...restProps}>{childNode}</td>;\n};\n\nconst EditableTable = ({ setTransactions, customerData, transactions, milk, notEditable }) => {\n  const [dataSource, setDataSource] = useState([]);\n\n  useEffect(() => {\n    setDataSource(transactions || []);\n  },[transactions])\n\n  const handleDelete = (key) => {\n    const newData = dataSource.filter((item) => item.key !== key);\n    // console.log('handleDelete', newData);\n    setDataSource(newData);\n    setTransactions(newData);\n  };\n\n  const defaultColumns = [\n    {\n      title: 'Item Name',\n      dataIndex: 'categoryName',\n      width: '35%',\n      editable: !notEditable\n    },\n    {\n      title: 'HSN Code',\n      dataIndex: 'hsnCode',\n      width: '10%'\n    },\n    {\n      title: 'Rate',\n      dataIndex: 'rate',\n      width: '10%',\n      editable: !notEditable\n    },\n    {\n      title: 'Quantity',\n      dataIndex: 'quantity',\n      width: '10%',\n      editable: !notEditable\n    },\n    {\n      title: 'Total',\n      dataIndex: 'total',\n      width: '10%',\n    },\n    {\n      title: 'GST Rate (%)',\n      dataIndex: 'gstRate',\n      width: '10%',\n    },\n    {\n      title: 'Total( inc. tax)',\n      dataIndex: 'totalWithTax',\n      width: '10%',\n    },\n  ];\n\n  if(!notEditable){\n    defaultColumns.push({\n      title: 'Action',\n      dataIndex: 'operation',\n      width: '5%',\n      render: (_, record) =>\n       record.categoryName !== 'Total Amount' ? dataSource.length >= 1 ? (\n          <Popconfirm title=\"Sure to delete?\" onConfirm={() => handleDelete(record.key)}>\n            <a>Delete</a>\n          </Popconfirm>\n        ) : null : null,\n    })\n  }\n\n  const handleAdd = () => {\n    const newData = {\n      key: uuid(),\n      categoryName: `Select Item`,\n      rate: 0,\n      quantity: 0,\n      total: 0,\n      gstRate: 0,\n      totalWithTax: 0,\n      hsnCode: ''\n    };\n    setDataSource([...dataSource, newData]);\n  };\n\n  const handleSave = (row) => {\n    const newData = [...dataSource];\n    const index = newData.findIndex((item) => row.key === item.key);\n    const item = newData[index];\n    newData.splice(index, 1, { ...item, ...row });\n    setTransactions(newData);\n  };\n\n  const components = {\n    body: {\n      row: EditableRow,\n      cell: EditableCell,\n    },\n  };\n  const columns = defaultColumns.map((col) => {\n\n    return {\n      ...col,\n      onCell: (record, index) => {\n        let __ = {};\n        if(record.categoryName == 'Total Amount' && col.dataIndex == 'categoryName' ){\n          __ = {\n            colSpan: 5\n          }\n        }\n\n        if(record.categoryName == 'Total Amount' && (col.dataIndex == 'quantity' || col.dataIndex == 'rate' || col.dataIndex == 'gstRate' || col.dataIndex == 'total') ){\n          __ = {\n            colSpan: 0\n          }\n        }\n        if (!col.editable) {\n          return __;\n        }\n        \n        return ({\n            record,\n            editable: col.editable,\n            dataIndex: col.dataIndex,\n            title: col.title,\n            handleSave,\n            customerData,\n            milk,\n            handleAdd,\n            ...__\n          })\n        },\n    };\n  });\n\n  const totalRow = {\n    key: uuid(),\n    categoryName: `Total Amount`,\n    totalWithTax: Math.round(dataSource.reduce((total, current) => total + current.totalWithTax, 0))\n  }\n  return (\n    <div>\n      { !notEditable ? \n        <Button\n          onClick={handleAdd}\n          type=\"primary\"\n          style={{\n            marginBottom: 16,\n          }}\n        > \n        Add a item\n      </Button> : null }\n      <Table\n        components={components}\n        rowClassName={() => 'editable-row'}\n        bordered\n        dataSource={[...dataSource, totalRow]}\n        columns={columns}\n        pagination={false}\n      />\n    </div>\n  );\n};\n\nexport default EditableTable;","import React, { useEffect, useState } from 'react';\nimport { Modal, Button, Row, Col, Table, Typography } from 'antd';\nimport InputField from '../common/InputField';\nimport { createInvoice, getAllMilkCategories } from '../../api'; \nimport swal from 'sweetalert';\nimport SelectField from '../common/SelectField';\nimport { PlusOutlined, RestOutlined } from '@ant-design/icons';\nimport EditableTable from '../common/EditableTable';\nimport moment from 'moment';\nimport { sweetalertValidate } from '../../util/util';\n\n\nconst InvoiceForm = ({ data, type, customers , callback, setEditData}) => {\n    const initialData = { \n        invoiceNo:'' ,\n        customerId: '' , \n        total: '', \n        transactions: [], \n        invoiceDate: moment().format('YYYY-MM-DD')\n    }\n\n    const [formData, setFormData] = useState(initialData);\n    const customerMap = customers ? customers.reduce((previous, current) => ({...previous,[current.id]: current}), {}) : {};\n    const [milk, setMilks] = useState({});\n    const [newCustomers, setNewCustomers] = useState([]);\n\n    const fetchMilkCategories = async () => {\n        const customerData = formData && formData.customerId && customerMap[formData.customerId]\n        const response = await getAllMilkCategories(customerData && customerData.type == 'special' ? customerData.id : undefined);\n        const milkMap = response?.data?.entity?.rows.reduce((previous, current) => ({...previous, [current.id]: current}), {});\n        setMilks(milkMap);\n    }\n\n    useEffect(async () => {\n        await fetchMilkCategories();\n    }, [formData]);\n\n    const onChange = (e) => {\n        setFormData({...formData,[e.target.name]: e.target.value});\n    }\n\n    const onSelectChange = (name, value) => {\n        console.log('cust', value);\n        setFormData({...formData,[name]: value});\n    }\n\n    const onSubmit = async (close) => {\n        console.log(formData);\n        if(!formData.transactions || formData.transactions?.length == 0){\n            sweetalertValidate('Please insert atleast one item');\n            return;\n        }\n        \n        if(formData.customerId == ''){\n            sweetalertValidate('Please select customer');\n            return;\n        }\n\n        formData.transactions = formData.transactions.filter((transaction) => transaction.categoryId);\n        if(formData.transactions.length == 0){\n            sweetalertValidate('No Items selected');\n            return;\n        }\n        formData.total = Math.round(formData.transactions.reduce((total,t) => total + (t.totalWithTax), 0));\n        formData.existingUser = !!customerMap[formData.customerId];\n        formData.type = type;\n    \n        let response = await createInvoice(formData);\n        if(response?.data?.status == true){\n            swal(\"Succesfully generated invoice details\", \"success\");\n            reset();    \n            await callback(formData.customerId, response.data.entity.customer);\n        }\n        else{\n            swal(\"OOPS Something Went wrong\", \"error\");\n        }\n        \n    }\n\n    const reset = () => {\n        setFormData(initialData);\n    }\n\n    const setTransactions = (transactions) => {\n        setFormData({...formData,'transactions': transactions});\n    }\n\n    const handleSearch = (value) => {\n        if (value) {\n            setNewCustomers([{ value: value, text: value }]);\n        }\n    }\n\n    return (\n        <>\n            <div id='form-div'>\n                <Row>\n                    <SelectField\n                        label={type === 'sale' ? 'Customer' : 'Vendor'}\n                        option={customers ? [...customers.map((item) => ({ value: item.id, text: item.name})), ...newCustomers] : [...newCustomers]}\n                        showSearch\n                        optionFilterProp=\"children\"\n                        value={formData ? formData['customerId'] : ''}\n                        showArrow={false}\n                        onSearch={(value) => handleSearch(value)}\n                        onChange={(value) => onSelectChange('customerId', value)}\n                        filterOption={(input, option) =>\n                            option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                        }\n                        filterSort={(optionA, optionB) =>\n                            optionA.children.toLowerCase().localeCompare(optionB.children.toLowerCase())\n                        }\n                        key={'customerId'}\n                    /> \n                    <InputField\n                        label={'Dated'}\n                        type={'date'} \n                        name={'invoiceDate'}\n                        onChange={onChange}\n                        key={'invoiceDate'}\n                        value={formData ? formData['invoiceDate'] : ''}\n                    />     \n                </Row>\n                <Row>\n                    <Col  span={24}>\n                        <EditableTable \n                            setTransactions={setTransactions}\n                            customerData={formData && formData.customerId && ( customerMap[formData.customerId] || { type: 'normal' } ) }\n                            transactions={formData && formData.transactions}\n                            milk={milk}\n                        />\n                    </Col>\n                </Row>\n                <Row>\n                    <Col span={24} className='text-right'>\n                        <Button onClick={() => reset()} className='mr-4' icon={ <RestOutlined />}>\n                            Reset\n                        </Button>\n                        <Button type=\"primary\" onClick={() => onSubmit()} icon={ <PlusOutlined />} >\n                            Generate { type == 'sale' ? 'Invoice' : 'Purchase'}\n                        </Button>\n                    </Col>\n                \n                </Row>\n            </div>\n        </>\n    );\n};\n\nexport default InvoiceForm;\n","import React, { useEffect, useState } from 'react';\nimport { Modal, Button, Row, Col, Table, Typography } from 'antd';\nimport { getAllMilkCategories, getInvoiceById } from '../../api'; \nimport moment from 'moment';\nimport EditableTable from '../common/EditableTable';\n\nconst { Title } = Typography;\n\n\nconst InvoiceDetailsModal = ({ visible , setVisible , invoiceId }) => {\n    const [invoiceDetails, setInvoiceDetails] = useState({\n        transactions: []\n    });\n    const [milk, setMilks] = useState({});\n\n    const fetchInvoicesDetails = async (invoiceId) => {\n        const response = await getInvoiceById(invoiceId);\n        console.log(response);\n\n        const transactions = response?.data?.entity.milkCategory.map((element) => {\n            const total  = element.Transaction.rate * element.Transaction.quantity;\n            return ({\n                categoryName: element.name,\n                rate: element.Transaction.rate,\n                quantity: element.Transaction.quantity,\n                total: element.Transaction.rate * element.Transaction.quantity,\n                gstRate: element.gstRate,\n                hsnCode: element.hsn,\n                totalWithTax: Math.round((total + (total * element.gstRate) / 100) * 10) / 10\n            })\n        })\n\n        setInvoiceDetails({ ...response?.data?.entity, transactions});\n    }\n\n    useEffect(async () => {\n        console.log('calling', invoiceId);\n        if(invoiceId){\n            await fetchInvoicesDetails(invoiceId);\n        }\n    }, [invoiceId]);\n\n    return (\n        <>\n        <Modal\n            title={`Invoice Details`}\n            visible={visible}\n            width={\"50%\"}\n            style={{ top: 75 }}\n            keyboard={false}\n            onCancel={() => setVisible(false)}\n            footer={[]}\n        >\n            <div className=\"site-layout-background p-5 mt-1\">\n                <Row>\n                    <Col span={12}>\n                        <Title level={3} style={{color: 'rgba(107, 114, 128, var(--tw-text-opacity))'}} className='border-b-2' >\n                            Customer Name : {invoiceDetails?.customer?.name}\n                        </Title>\n                    </Col>\n                    <Col span={12}>\n                        <Title level={3} style={{color: 'rgba(107, 114, 128, var(--tw-text-opacity))'}} className='border-b-2' >\n                            Dated : { moment(invoiceDetails?.invoiceDate).format('DD-MM-YYYY') }\n                        </Title>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col  span={24}>\n                        <EditableTable\n                            customerData={invoiceDetails && invoiceDetails.customerId && invoiceDetails?.customer}\n                            transactions={invoiceDetails && invoiceDetails?.transactions }\n                            milk={{}}\n                            notEditable={true}\n                        />\n                    </Col>\n                </Row>\n            </div>\n                   \n        </Modal>\n        </>\n    );\n};\n\nexport default InvoiceDetailsModal;","import React, { useEffect, useState } from 'react';\nimport millify from 'millify';\nimport { Typography, Row, Col, Statistic, Table, Button, Input } from 'antd';\nimport CustomerForm from './Forms/CustomerForm';\nimport { deleteInvoice, getAllCustomers, getAllInvoices } from '../api';\nimport InvoiceData from '../data/InvoiceData';\nimport { DeleteOutlined, EditOutlined } from '@ant-design/icons';\nimport InvoiceForm from './Forms/InvoiceForm';\nimport moment from 'moment';\nimport PaymentModal from './Modal/PaymentModal';\nimport InvoiceDetailsModal from './Modal/InvoiceDetailModal';\nimport { sweetalertMessage, sweetalertValidate } from '../util/util';\n\nconst { Title } = Typography;\n\nconst Invoices = ({ type }) => {\n\n    const [customers, setCustomers] = useState(null);\n    const [invoices, setInvoices] = useState(null);\n    const [visible, setVisible] = useState(false);\n    const [selectedCustomer, setSelectedCustomer] = useState(null);\n    const [visibleID, setVisibleID] = useState(false);\n    const [selectedInvoiceId, setSelectedInvoiceId] = useState(null);\n\n    const [currentPage, setCurrentPage] = useState(1);\n    const [pageSize, setPageSize] = useState(20);\n    const [total, setTotal] = useState(0);\n\n    const [search, setSearch] = useState('');\n\n    const fetchCustomers = async () => {\n        const response = await getAllCustomers(undefined, 0, undefined, type === 'purchase');\n        setCustomers(response?.data?.entity.rows);\n    }\n\n    const fetchInvoices = async () => {\n        const response = await getAllInvoices(type, search, (currentPage - 1) * pageSize, pageSize);\n        setInvoices(response?.data?.entity.rows.map((inv) => ({\n            ...inv,\n            customerName: inv.customer.name,\n            invoiceDate: inv.invoiceDate? moment(inv.invoiceDate).format('DD-MM-YYYY') : null,\n            paymentDate: inv.paymentDate ? moment(inv.paymentDate).format('DD-MM-YYYY') : null\n        })));\n        setTotal(response?.data?.entity.count);\n    }\n\n    useEffect(() => {\n        fetchCustomers();\n    },[]);\n\n    useEffect(() => {\n        fetchInvoices();\n      },[currentPage, pageSize, search, type]);\n\n    const openInvoiceDetail = (invoiceId) => {\n        setSelectedInvoiceId(invoiceId);\n        setVisibleID(true);  \n    }\n\n    const getRender = (column) => {\n        if(column.name == 'invoiceNo'){\n            return {\n                render: (invoiceNo, data) => {\n                    return (\n                        <div>\n                            <a onClick={() => openInvoiceDetail(data.id)} className='underline text-blue-900'>\n                            { invoiceNo }\n                            </a>\n                        </div>\n                    )\n                }\n            }\n        }\n        return {};\n    }\n\n    const  onDelete = async (data) => {\n        const isConfirm = confirm('Are you sure you want to delete ?')\n        if(isConfirm){\n            const response = await deleteInvoice(data.id);\n            if(response?.data?.status){\n                sweetalertMessage('Succesfully Deleted')\n            }\n            else{\n                sweetalertValidate('OOPS!! Something went wrong')\n            }\n            fetchInvoices();\n        } \n    }\n\n    const fieldData = InvoiceData;\n    const columns = fieldData.map((column) => ({\n        title:  ( \n            <Typography.Text ellipsis={true} title={column.label}>\n                {column.label == 'Customer' && type === 'purchase' ? 'Vendor' : column.label}\n            </Typography.Text>\n        ),\n        dataIndex: column.name,\n        key: column.name,\n        width: '150px',\n        ...getRender(column)\n    }));\n\n    columns.push({\n        title: 'Action',\n        key: 'operation',\n        width: 10,\n        render: (data) => {\n            return (\n                <div className=\"float-right\">\n                    \n                    <Button key={'delete'+data.id} type=\"secondary\" onClick={() => onDelete(data)} className=\"ml-2\" title=\"Delete\">\n                        <DeleteOutlined />\n                    </Button>\n                </div>\n            );\n        },\n    });\n\n    const handlePageChange = (page) => {\n        setCurrentPage(page);\n      };\n    \n      const handlePageSizeChange = (current, size) => {\n        setPageSize(size);\n        setCurrentPage(1);\n      };\n  \n    \n      const initpageSizeOptions = [10, 20, 50, 100];\n      const pageSizeOptions = [];\n      while(initpageSizeOptions.length > 0 && initpageSizeOptions[0] < total ){\n          pageSizeOptions.push(initpageSizeOptions[0] + '');\n          initpageSizeOptions.shift();\n      }\n      if(total > 10) pageSizeOptions.push( total + '');\n\n    return (\n        <div  style={{ height: 'calc(100vh - 150px)', overflowY :'auto'}}>\n            <div className=\"site-layout-background p-5\">\n                <Title level={3} style={{color: 'rgba(107, 114, 128, var(--tw-text-opacity))'}} className='border-b-2' >Generate { type == 'sale' ? 'Invoice' : 'Purchase'} </Title>\n                <InvoiceForm \n                    customers={customers} \n                    type={type}\n                    callback={async (customerId, customerData) => {\n                        await fetchInvoices();\n                        setSelectedCustomer(customerData)\n                        setVisible(true);\n                    }}/>\n            </div>\n            <div className=\"site-layout-background p-5 mt-1\">\n                <Title level={3} style={{color: 'rgba(107, 114, 128, var(--tw-text-opacity))'}} className='border-b-2' >{ type == 'sale' ? 'Invoices' : 'Purchases'}</Title>\n                <div className='mb-2'>\n                    <Row className=\"w-full\">\n                        <Col span={12}>\n                            <Input\n                                placeholder=\"Search...\"\n                                value={search}\n                                onChange={e => setSearch(e.target.value)}\n                            />\n                        </Col>\n                    </Row>\n                </div>\n                <Row className=\"w-full\">\n                    <Col span={24}>\n                        <Table\n                            dataSource={invoices} \n                            columns={columns}\n                            bordered\n                            pagination={{ \n                                position: ['bottomRight', 'topRight'], \n                                pageSizeOptions,\n                                current: currentPage,\n                                pageSize: pageSize,\n                                onChange: handlePageChange,\n                                onShowSizeChange: handlePageSizeChange,\n                                total,\n                                showSizeChanger: true\n                             }}\n                            rowKey={(record) => record.id + (new Date().getTime() + Math.random() * 10000)}\n                        />\n                    </Col>\n                </Row> \n                <PaymentModal visible={visible} setVisible={setVisible} customer={selectedCustomer}  callback={fetchInvoices}/>\n                <InvoiceDetailsModal visible={visibleID} setVisible={setVisibleID} invoiceId={selectedInvoiceId} />\n            </div>\n        </div>\n    );\n};\n\nexport default Invoices;\n","import React, { useEffect, useState } from 'react';\nimport millify from 'millify';\nimport { Typography, Row, Col, Statistic, Table, Button, Input } from 'antd';\nimport { createStocks, getStocks } from '../api';\nimport { SaveOutlined } from '@ant-design/icons';\nimport { sweetalertMessage, sweetalertValidate, uuid } from '../util/util';\nimport moment from 'moment';\n\nconst { Title } = Typography;\n\nconst Stock = () => {\n\n    const [stocks, setStocks] = useState([]);\n    const [reportDate, setReportDate] = useState(moment().format('YYYY-MM-DD'))\n\n    const fetchStocks = async () => {\n        console.log(reportDate, 'reportDate');\n        const response = await getStocks(reportDate);\n        console.log(response)\n        setStocks(response?.data?.entity.map((stock) => ({ ...stock, name: stock.milkCategory.name, total: parseFloat(stock.carryForward) + parseFloat(stock.eveningQuantity) + parseFloat(stock.morningQuantity)})));\n    }\n\n    useEffect(() => {\n        fetchStocks();\n    },[reportDate]);\n\n    const onChange = (name, value, data) => {\n        const total = parseFloat(data.carryForward || 0 ) + parseFloat(value) + parseFloat(name == 'morningQuantity' ? data.eveningQuantity : data.morningQuantity);\n        document.getElementById(`total_${data.id}`).innerHTML = total;\n    }\n\n    const getRender = (name) => {\n        if(name == 'morningQuantity' || name == 'eveningQuantity'){\n            return {\n                render: (value, data) => {\n                    return (\n                        <Input\n                            onChange={(e) => onChange(name, e.target.value, data)}\n                            defaultValue={value}\n                            type='number'\n                            key={uuid()}\n                            id={`${name}_${data.id}`}\n                        />\n                    )\n                }\n            }\n        }\n        if(name == 'total'){\n            return {\n                render: (value, data) => {\n                    return (\n                        <div className='font-bold' id={`total_${data.id}`}>\n                           {value}\n                        </div>\n                    )\n                }\n            }\n        }\n        return {};\n    }\n\n    const fieldData = [\n        {\n            label: \"Item Name\",\n            name: 'name',\n        },\n        {\n            label: \"Carry Forward\",\n            name: 'carryForward'\n        },\n        {\n            label: \"Morning Quantity\",\n            name: 'morningQuantity',\n        },\n        {\n            label: \"Evening Quantity\",\n            name: 'eveningQuantity',\n        },\n        {\n            label: \"Total\",\n            name: 'total',\n        },\n    ];\n    const columns = fieldData.map((column) => ({\n        title:  ( \n            <Typography.Text ellipsis={true} title={column.label}>\n                {column.label}\n            </Typography.Text>\n        ),\n        dataIndex: column.name,\n        key: column.name,\n        width: '100px',\n        align: column.align ? column.align : 'left',\n        ...getRender(column.name)\n    }));\n\n    const onSave = async () => {\n        const stockData = stocks.map((stock) => ({\n            id: stock.id,\n            categoryId: stock.categoryId,\n            carryForward: stock.carryForward,\n            morningQuantity: document.getElementById(`morningQuantity_${stock.id}`).value,\n            eveningQuantity: document.getElementById(`eveningQuantity_${stock.id}`).value\n        }));\n        console.log(stockData)\n        const response = await createStocks(stockData);\n        console.log(response)\n        if(response?.data?.status == true){\n            sweetalertMessage(\"Succesfully Saved Stock Details\");\n        }\n        else{\n            sweetalertValidate(\"OOPS Something Went wrong\");\n        }\n    }\n\n    const onChangeDate = (e) => {\n        setReportDate(e.target.value);\n      }\n\n    return (\n        <>\n            <div className=\"site-layout-background p-5 mt-1\">\n                <Row>\n                    <Col span={12}>\n                        <div style={{color: 'rgba(107, 114, 128, var(--tw-text-opacity))'}} className='flex border-b-2' >\n                            <Title level={3} style={{color: 'rgba(107, 114, 128, var(--tw-text-opacity))'}} className='border-b-2' >\n                                { reportDate === moment().format('YYYY-MM-DD') ? \"Today's Stocks\" : \"Stocks\" }\n                            </Title>\n                            <div className=''>\n                                <Row>\n                                    <Input\n                                        type={'date'} \n                                        name={'reportDate'}\n                                        onChange={onChangeDate}\n                                        key={'invoiceDate'}\n                                        value={reportDate}\n                                        className='ml-2'\n                                    /> \n                                </Row>\n                            </div>\n                        </div>\n                    </Col>\n                    <Col span={12}>\n                        { reportDate === moment().format('YYYY-MM-DD') && <Button type=\"primary\" className='float-right' icon={ <SaveOutlined /> } onClick={onSave}> Save </Button> }\n                    </Col>\n                </Row>\n               \n                <Row className=\"w-full\">\n                    <Col span={24}>\n                        <Table\n                            dataSource={stocks} \n                            columns={columns}\n                            bordered\n                            scroll={{ y: 'calc(100vh - 300px)' }}\n                            pagination={false}\n                            rowKey={(record) => record.id + (new Date().getTime() + Math.random() * 10000)}\n                        />\n                    </Col>\n                </Row> \n            </div>\n        </>\n    );\n};\n\nexport default Stock;\n","import React, { useEffect, useState } from 'react';\nimport { Typography, Row, Col, Statistic, Table, Button, Pagination, Input, Select } from 'antd';\nimport { deleteApiFn, getApiFn, getFieldData, getPageName, getTitle, mappingData, sweetalertMessage, sweetalertOkCancel, sweetalertValidate } from '../util/util';\nimport { DeleteOutlined, EditOutlined } from '@ant-design/icons';\nimport moment from 'moment';\n\nconst { Title } = Typography;\n\nconst SelectCustomers = ({ page, setFilter, filter }) => {\n    const [customers, setCustomers] = useState(null);\n    const [selectedCustomer, setSelectedCustomer] = useState(null);\n\n    useEffect(() => {\n        const getCustomers = async () => {\n            const response = await getApiFn('customers')('customers');\n            setCustomers(response?.data?.entity.rows);\n        };\n        getCustomers();\n    }, []);\n\n    const onChange = (value) => {\n        setSelectedCustomer(value);\n        setFilter({...filter, customerId: value});\n    }\n    \n    return (\n        <Select\n            showSearch\n            className='w-full'\n            placeholder=\"Select a customer\"\n            optionFilterProp=\"children\"\n            onChange={onChange}\n            value={selectedCustomer}\n            filterOption={(input, option) =>\n                option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n            }\n        >\n            {customers?.map((customer) => (\n                <Select.Option key={customer.id} value={customer.id}>{customer.name}</Select.Option>\n            ))}\n        </Select>\n    )\n}\n\n\nconst ListComponent = ({ page, reload, setEditData, setReload, noaction }) => {\n\n    const [invoices, setInvoices] = useState(null);\n    const [visibleID, setVisibleID] = useState(false);\n    const [selectedInvoiceId, setSelectedInvoiceId] = useState(null);\n\n    const [currentPage, setCurrentPage] = useState(1);\n    const [pageSize, setPageSize] = useState(20);\n    const [total, setTotal] = useState(0);\n\n    const [search, setSearch] = useState('');\n    const [filter, setFilter] = useState({});\n    const [visibleFilter, setVisibleFilter] = useState(false);\n\n    const fetchInvoices = async () => {\n        const getApi = getApiFn(page); \n        const response = await getApi(page, search, (currentPage - 1) * pageSize, pageSize , JSON.stringify(filter));\n        \n        console.log('response', response);\n        setInvoices(response?.data?.entity.rows.map((data) => mappingData(page, data)));\n        setTotal(response?.data?.entity.count);\n    }\n\n    useEffect(() => {\n        fetchInvoices();\n    },[page, currentPage, pageSize, reload, search, filter]);\n\n    const openInvoiceDetail = (invoiceId) => {\n        setSelectedInvoiceId(invoiceId);\n        setVisibleID(true);  \n    }\n\n    const onEdit = (data) => {\n        setEditData({...data})\n    }\n\n    const  onDelete = async (data) => {\n        sweetalertOkCancel(\n            'Are you sure you want to delete ?',\n            async () => {\n                const deleteApi = deleteApiFn(page);\n                const response = await deleteApi(data.id);\n                if(response?.data?.status){\n                    sweetalertMessage('Succesfully Deleted')\n                }\n                else{\n                    console.log('err', response)\n                    sweetalertValidate('OOPS!! Something went wrong')\n                }\n                setReload(!reload);\n            },\n            () => {}\n        )\n    }\n\n    const getRender = (column, page) => {\n        return {\n            render: (value, data) => {\n                if(column.name == 'invoiceNumber'){\n                    const invoiceId =  page == 'receipts' || page == 'payments' ? data.invoice?.id : data.id;\n                    return (\n                        <div>\n                            <a onClick={() => openInvoiceDetail(invoiceId)} className='underline text-blue-900'>\n                            { value }\n                            </a>\n                        </div>\n                    )\n                }\n                if(column.inputType === 'number'){\n                    return (\n                        <div>\n                            { value ? value.toLocaleString('en-IN') : value } \n                        </div>\n                    )\n                        \n                }\n                if(column.inputType === 'date'){\n                    return (\n                        <div>\n                            { value ? moment(value).format('DD-MM-YYYY') : null } \n                        </div>\n                    )\n                        \n                }\n\n                if(column.name === 'companyId'){\n                    return `${data?.company?.division} - ${data?.company?.name}` \n                }\n\n                if(column.name === 'customerId'){\n                    return `${data?.customer ? data?.customer.name : ''}` \n                }\n                return value\n            }\n        };\n    }\n    const fieldData = getFieldData(page); \n    const columns = fieldData.map((column) => ({\n        title:  ( \n            <Typography.Text ellipsis={true} title={column.label}>\n                {getTitle(column, page)}\n            </Typography.Text>\n        ),\n        dataIndex: column.name,\n        key: column.name,\n        width: '150px',\n        ...getRender(column, page)\n    }));\n\n    if(!noaction){\n        columns.push({\n            title: 'Action',\n            key: 'operation',\n            width: '100px',\n            render: (data) => {\n                return (\n                    <div className=\"float-right\">\n                        <Button key={'edit'+data.id} type=\"primary\" onClick={() => onEdit(data)} title=\"Edit\">\n                            <EditOutlined />\n                        </Button>\n                        \n                        <Button key={'delete'+data.id} type=\"secondary\" onClick={() => onDelete(data)} className=\"ml-2\" title=\"Delete\">\n                            <DeleteOutlined />\n                        </Button>\n                    </div>\n                );\n            },\n        });\n    }\n   \n\n    const handlePageChange = (page) => {\n        setCurrentPage(page);\n      };\n    \n      const handlePageSizeChange = (current, size) => {\n        setPageSize(size);\n        setCurrentPage(1);\n      };\n\n    \n    const initpageSizeOptions = [10, 20, 50, 100];\n    const pageSizeOptions = [];\n    while(initpageSizeOptions.length > 0 && initpageSizeOptions[0] < total ){\n        pageSizeOptions.push(initpageSizeOptions[0] + '');\n        initpageSizeOptions.shift();\n    }\n    if(total > 10) pageSizeOptions.push( total + '');\n\n\n    return (\n        <div>\n            <div className=\"site-layout-background p-5 mt-1\">\n                <Title level={3} style={{color: 'rgba(107, 114, 128, var(--tw-text-opacity))'}} className='border-b-2' >\n                    {getPageName(page)}\n                </Title>\n                <div className='mb-2'>\n                    <Row className=\"w-full\">\n                        <Col span={12}>\n                            { page === 'payment-receipts' ? \n                            <SelectCustomers filter={filter} setFilter={setFilter} />\n                            : <Input\n                                placeholder=\"Search...\"\n                                value={search}\n                                onChange={e => setSearch(e.target.value)}\n                            />\n                            }\n                        </Col>\n                    </Row>\n                </div>\n                <Row className=\"w-full\">\n                    <Col span={24}>\n                        <Table\n                            dataSource={invoices} \n                            columns={columns}\n                            bordered\n                            pagination={{ \n                                position: ['bottomRight', 'topRight'], \n                                pageSizeOptions,\n                                current: currentPage,\n                                pageSize: pageSize,\n                                onChange: handlePageChange,\n                                onShowSizeChange: handlePageSizeChange,\n                                total,\n                                showSizeChanger: true\n                             }}\n                            rowKey={(record) => record.id + (new Date().getTime() + Math.random() * 10000)}\n                        />\n                    </Col>\n                </Row> \n            </div>\n        </div>\n    );\n};\n\nexport default ListComponent;\n","import React, { useState } from 'react';\nimport { Switch, Route, Link } from 'react-router-dom';\nimport 'antd/dist/antd.css';\nimport './index.css';\nimport './App.css';\nimport { Avatar, Breadcrumb, Layout, Menu } from 'antd';\nimport { Customer, Homepage, Navbar, MilkCategory } from './components';\nimport { MailOutlined, NotificationOutlined, UserOutlined } from '@ant-design/icons';\nimport Invoices from './components/Invoices';\nimport Stock from './components/Stock';\nimport ListComponent from './components/ListComponent';\n\nconst { Header, Content, Footer, Sider } = Layout;\n\nconst App = () => {\n  const [collapsed, setCollapsed] = useState(false);\n  return (\n    <Layout className='h-screen'>\n      <Sider collapsible collapsed={collapsed} onCollapse={(value) => setCollapsed(value)}>\n        <Navbar />\n      </Sider>\n      <Layout className=\"site-layout\">\n        <Header\n          className=\"site-layout-background\"\n          style={{\n            padding: 0,\n          }}\n        >\n           <Menu mode=\"horizontal\" style={{ float: 'right', width: 'auto'}}>\n              <Menu.Item key=\"notification\" icon={<NotificationOutlined />}>\n              </Menu.Item>\n              <Menu.Item key=\"mail\" icon={<MailOutlined />}>\n              </Menu.Item>\n              <Menu.Item key=\"profile\">\n                <Avatar size={30} icon={<UserOutlined />} />\n              </Menu.Item>\n            </Menu>\n        </Header>\n        <Content style={{ margin: '0 16px' }} >\n          <Breadcrumb style={{ margin: '16px 0'}}>\n            <Breadcrumb.Item>Home</Breadcrumb.Item>\n          </Breadcrumb>\n          <div style={{ padding: 10 }} >\n           <Switch>\n              <Route exact path=\"/\">\n                <Homepage />\n              </Route>\n              <Route exact path=\"/customers\">\n                <Customer />\n              </Route>\n              <Route exact path=\"/milk-category\">\n                <MilkCategory />\n              </Route>\n              <Route exact path=\"/invoices\">\n                <Invoices type={'sale'}/>\n              </Route>\n              <Route exact path=\"/stocks\">\n                <Stock />\n              </Route>\n              <Route exact path=\"/payments\">\n                <ListComponent page={'payment-receipts'} reload={false} noaction={true}/>\n              </Route>\n              <Route exact path=\"/purchases\">\n                <Invoices type={'purchase'}/>\n              </Route>\n            </Switch>\n          </div>\n        </Content>\n      </Layout>\n    </Layout>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport 'antd/dist/antd.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","import { Col, Row } from \"antd\";\n\nconst InputField = ({label , lcol , icol, placeholder, ...inputProps }) => {\n    return (\n        <>\n            \n                <Col span={lcol? lcol : 4} className=\"mb-3\">\n                    <label className=\"block font-semibold mt-5 text-right mr-10\">{label}</label>\n                </Col>\n                <Col span={icol ? icol : 8} className=\"mb-3\">\n                    <input {...inputProps} placeholder={placeholder? placeholder : label} className=\"w-full py-2 px-2 mt-2 border-2\"/>\n                </Col>\n            \n            \n        </>\n    )\n}\n\nexport default InputField;","import { Col, Row, Select } from \"antd\";\nconst { Option } = Select;\n\nconst SelectField = ({label, lcol , icol, option, selected, ...property}) => {\n    return (\n        <>\n                <Col span={lcol? lcol : 4} className=\"mb-3\">\n                    <label className=\"block font-semibold mt-5 text-right mr-10\">{label}</label>\n                </Col>\n                <Col span={icol? icol : 8} className=\"mb-3\">\n                    <div className=\"mt-5\">\n                        <Select className=\"w-full\" placeholder={label} {...property}>\n                            { option.map((ele,index) => <Option value={ele.value} key={index}>{ele.text}</Option>) }\n                        </Select>\n                    </div>\n                </Col> \n        </>\n    )\n}\n\nexport default SelectField"],"sourceRoot":""}
{"version":3,"sources":["data/CustomerData.js","data/MilkData.js","components/Forms/CustomerForm.js","components/Forms/MillBulkForm.js","components/Forms/MilkForm.js","api/index.js","data/InvoiceData.js","util/util.js","components/Modal/PaymentModal.js","components/Homepage.js","components/Navbar.js","images/cryptocurrency.png","components/Customer.js","components/MilkCategory.js","components/common/EditableTable.js","components/Forms/InvoiceForm.js","components/Modal/InvoiceDetailModal.js","components/Invoices.js","components/Stock.js","App.js","index.js","components/common/InputField.js","components/common/SelectField.js"],"names":["CustomerData","label","name","type","inputType","list","MilkData","defaultValue","CustomerForm","data","callback","setEditData","initialData","reduce","previous","field","useState","formData","setFormData","onChange","e","target","value","onSelectChange","useEffect","setRatesToData","rates","Object","values","onSubmit","close","a","console","log","updateCustomer","id","response","status","swal","createCustomer","reset","customerType","map","option","eval","item","text","showSearch","optionFilterProp","showArrow","filterOption","input","children","toLowerCase","indexOf","filterSort","optionA","optionB","localeCompare","customerId","span","className","onClick","icon","Title","Typography","MilkBulkFom","setRates","fetchMilkCategories","getAllMilkCategories","entity","rows","ratesObj","current","categoryId","rate","res","forEach","category","level","style","color","overflowY","rateObj","lcol","icol","MilkFom","rateDisbaled","setRateDiabled","updateMilCategory","createMilCategory","taxable","gstRate","disabled","url","window","location","hostname","API","axios","create","baseURL","UrlParamsReplace","params","queryParams","urlWithPrefix","keys","key","replace","queryParamsWithoutNull","undefined","urlSearchParams","URLSearchParams","toString","getAllCustomers","search","offset","limit","get","getCustomersWithDues","customer","post","put","deleteCustomer","delete","deleteMilCategory","createInvoice","invoice","getAllInvoices","getInvoicesByDate","date","getInvoiceById","invoiceId","deleteInvoice","getDueInvoices","createPayments","payment","createStocks","stocks","getStocks","getStocksByDate","InvoiceData","sweetalertValidate","message","buttons","cancel","visible","closeModal","confirm","sweetalertMessage","uuid","c","r","Math","random","PaymentModal","setVisible","amountReceived","additionalDue","invoices","setInvoices","fetchInvoices","inv","invoiceDate","moment","format","paymentDate","onClose","confirmFunction","cancelFunction","then","isConfirm","columns","column","title","Text","ellipsis","dataIndex","width","filter","total","top","keyboard","onCancel","footer","dataSource","bordered","pagination","rowKey","record","Date","getTime","previousDue","round","due","InputField","Homepage","reportDate","setReportDate","milk","setMilks","customers","setCustomers","selectedCustomer","setSelectedCustomer","setStocks","currentPage","setCurrentPage","pageSize","setPageSize","setTotal","setSearch","fetchCustomers","count","length","fixed","ele","totalStocksMap","acc","carryForward","morningQuantity","eveningQuantity","totalSoldStockMap","i","invs","milkCategory","j","catId","Transaction","quantity","totalDataSource","customerColumns","render","onPayment","EditOutlined","initpageSizeOptions","pageSizeOptions","push","shift","height","overflowX","gutter","millify","scroll","x","y","showHeader","placeholder","position","page","onShowSizeChange","size","showSizeChanger","Navbar","activeMenu","setActiveMenu","screenSize","setScreenSize","handleResize","innerWidth","addEventListener","removeEventListener","to","MenuOutlined","theme","Item","HomeOutlined","UsergroupAddOutlined","MoneyCollectOutlined","BulbOutlined","StrikethroughOutlined","Customer","setCustomrs","editData","onDelete","setTimeout","document","getElementById","scrollIntoView","onEdit","DeleteOutlined","MilkCategory","EditableContext","React","createContext","EditableRow","index","props","Form","useForm","form","component","Provider","EditableCell","editable","handleSave","customerData","restProps","editing","inputRef","useRef","useContext","focus","onSave","newValues","normal","categoryName","parseFloat","totalWithTax","childNode","margin","rules","required","Option","paddingRight","fontSize","EditableTable","setTransactions","transactions","notEditable","setDataSource","setCount","defaultColumns","_","onConfirm","newData","handleDelete","row","findIndex","splice","components","body","cell","col","onCell","__","colSpan","totalRow","marginBottom","rowClassName","InvoiceForm","invoiceNo","customerMap","newCustomers","setNewCustomers","milkMap","transaction","t","existingUser","SelectField","onSearch","handleSearch","RestOutlined","PlusOutlined","InvoiceDetailsModal","invoiceDetails","setInvoiceDetails","fetchInvoicesDetails","element","Invoices","visibleID","setVisibleID","selectedInvoiceId","setSelectedInvoiceId","customerName","getRender","Stock","fetchStocks","stock","innerHTML","align","stockData","SaveOutlined","Header","Layout","Content","Sider","Footer","App","collapsed","setCollapsed","collapsible","onCollapse","padding","mode","float","NotificationOutlined","MailOutlined","UserOutlined","exact","path","ReactDOM","StrictMode","inputProps","Select","property","selected"],"mappings":"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","file":"static/js/main.432f7e8d.chunk.js","sourcesContent":["const CustomerData = [\n    {\n        label : \"Name\",\n        name: 'name',\n        type: 'input',\n        inputType: 'text'\n    },\n    {\n        label : \"Mobile\",\n        name: 'mobile',\n        type: 'input',\n        inputType: 'text'\n    },\n    {\n        label : \"Type\",\n        name: 'type',\n        type: 'select',\n        inputType: 'text',\n        list: \"customerType\"\n    }\n];\n\nexport default CustomerData;","const MilkData = [\n    {\n        label : \"Name\",\n        name: 'name',\n        type: 'input',\n        inputType: 'text'\n    },\n    {\n        label : \"Rates\",\n        name: 'rate',\n        type: 'input',\n        inputType: 'number'\n    },\n    {\n        label : \"Taxable\",\n        name: 'taxable',\n        type: 'select',\n        inputType: 'text',\n        list: 'taxable',\n        defaultValue: 'No'\n    },\n    {\n        label : \"GST Rate (%)\",\n        name: 'gstRate',\n        type: 'select',\n        inputType: 'number',\n        list: 'gstRate',\n        defaultValue: 0\n    }\n];\n\nexport default MilkData;","import React, { useEffect, useState } from 'react';\nimport { Modal, Button, Row, Col, Table, Typography } from 'antd';\nimport InputField from '../common/InputField';\nimport { createCustomer, updateCustomer } from '../../api'; \nimport swal from 'sweetalert';\nimport CustomerData from '../../data/CustomerData';\nimport SelectField from '../common/SelectField';\nimport { PlusOutlined, RestOutlined } from '@ant-design/icons';\nimport MilkBulkFom from './MillBulkForm';\n\n\nconst CustomerForm = ({ data , callback, setEditData}) => {\n\n    const initialData = CustomerData.reduce((previous, field) => ({...previous,[field.name]: ''}),{});\n    const [formData, setFormData] = useState(initialData);\n\n    const onChange = (e) => {\n        setFormData({...formData,[e.target.name]: e.target.value});\n    }\n\n    const onSelectChange = (name, value) => {\n        setFormData({...formData,[name]: value});\n    }\n\n    useEffect(() => {\n        setFormData(data);\n    },[data])\n\n    const setRatesToData = (data) => {\n        setFormData({\n            ...formData,\n            rates: Object.values(data)\n        })\n    }\n\n    const onSubmit = async (close) => {\n        console.log(formData);\n    \n        if(data) {\n            let response = await updateCustomer(data.id,formData);\n            console.log(response);\n            if(response?.data?.status == true){\n                swal(\"Succesfully updated customer details\", \"success\");\n            }\n            else{\n                swal(\"OOPS Something Went wrong\", \"error\");\n            }\n        }\n        else{\n            let response = await createCustomer(formData);\n            console.log(response);\n            if(response?.data?.status == true){\n                swal(\"Succesfully added customer details\", \"success\");\n            }\n            else{\n                swal(\"OOPS Something Went wrong\", \"error\");\n            }\n        }\n        reset();\n        await callback();\n    }\n\n    const reset = () => {\n        setFormData(initialData);\n        setEditData(null);\n    }\n\n    const customerType =  [{ value: 'normal', name: 'Normal' }, { value: 'special', name: 'Special'} ];\n\n    return (\n        <>\n            <div id='form-div'>\n                <Row>\n                    { \n                        CustomerData.map((field) => field.type == 'input' ?\n                            <InputField\n                                label={field.label}\n                                type={field.inputType} \n                                name={field.name}\n                                onChange={onChange}\n                                key={field.name}\n                                value={formData ? formData[field.name] : ''}\n                            /> : \n                            <SelectField\n                                label={field.label}\n                                option={eval(field.list).map((item) => ({ value: item.value, text: item.name}))}\n                                showSearch\n                                optionFilterProp=\"children\"\n                                value={formData ? formData[field.name] : ''}\n                                showArrow={false}\n                                onChange={(value) => onSelectChange(field.name, value)}\n                                filterOption={(input, option) =>\n                                    option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                                }\n                                filterSort={(optionA, optionB) =>\n                                    optionA.children.toLowerCase().localeCompare(optionB.children.toLowerCase())\n                                }\n                                key={field.name}\n                            />\n                        )\n                    }     \n                </Row>\n                {\n                    formData?.type === 'special' ? <MilkBulkFom customerId={data?.id} type={formData.type} setRatesToData={setRatesToData}/> : null\n                }\n                <Row>\n                    <Col span={24} className='text-right'>\n                        <Button onClick={() => reset()} className='mr-4' icon={ <RestOutlined />}>\n                            Reset\n                        </Button>\n                        <Button type=\"primary\" onClick={() => onSubmit()} icon={ <PlusOutlined />} >\n                            { data ? 'Edit' : 'Add' } \n                        </Button>\n                    </Col>\n                \n                </Row>\n            </div>\n        </>\n    );\n};\n\nexport default CustomerForm;\n\n// TazzaLitre rate Taaza rate Slim rate Gold rate 200ml rate Double rate 250ml rate Lassi rate Shakti rate\n// LitreDahi rate 200D rate 400D rate Metro rate Rich rate Paneer rate\n// Mistidahi rate Tazza5litre rate\n","import React, { useEffect, useState } from 'react';\nimport { Modal, Button, Row, Col, Table, Typography } from 'antd';\nimport InputField from '../common/InputField';\nimport { getAllMilkCategories } from '../../api'; \nimport swal from 'sweetalert';\nconst { Title } = Typography;\n\n\n\nconst MilkBulkFom = ({ customerId , type , setRatesToData}) => {\n\n    const [rates, setRates] = useState({});\n\n    const onChange = (e, data) => {\n        const rateObj = {...rates,\n            [data.id]: {\n                name: data.name, \n                rate: e.target.value,\n                categoryId: data.categoryId,\n                id: data.id\n            }\n        }\n        setRates(rateObj);\n        setRatesToData(rateObj);\n    }\n\n    const fetchMilkCategories = async () => {\n        const response = await getAllMilkCategories(customerId);\n        const data = response?.data?.entity.rows;\n\n        const ratesObj = data.reduce((previous, current) => ({ ...previous, [customerId ? current.categoryId: current.id]: {\n            name: current.name, \n            rate: current.rate,\n            categoryId: customerId ? current.categoryId: current.id,\n            id: current.id\n        } }), {});\n\n        if(customerId){\n            const res = await getAllMilkCategories(null);\n            const actualCategory = res?.data?.entity.rows;\n            actualCategory.forEach((category) => {\n                if(!ratesObj[category.id]){\n                    ratesObj[category.id] = {\n                        name: category.name, \n                        rate: category.rate,\n                        categoryId: category.id,\n                        id: category.id\n                    }\n                }\n            })\n        }\n\n        setRates(ratesObj);\n        setRatesToData(ratesObj);\n    }\n\n    useEffect(() => {\n        if(type === 'special'){\n            fetchMilkCategories();\n        }\n    },[customerId]);\n\n\n    return (\n        <>\n            <div >\n                <Title level={4} style={{color: 'rgba(107, 114, 128, var(--tw-text-opacity))'}} className='border-b-2' >Rates</Title>\n                <Row style={{ overflowY :'auto'}} className='border-b-2 mb-2'>\n                    { \n                        Object.values(rates).map((field) =>\n                            <InputField\n                                label={field.name}\n                                type='number' \n                                name={field.name}\n                                onChange={(e) => onChange(e, field)}\n                                key={field.id}\n                                value={field.rate}\n                                lcol={2}\n                                icol={2}\n                            /> \n                        )\n                    }     \n                </Row>\n            </div>\n        </>\n    );\n};\n\nexport default MilkBulkFom;\n","import React, { useEffect, useState } from 'react';\nimport { Modal, Button, Row, Col, Table, Typography } from 'antd';\nimport InputField from '../common/InputField';\nimport { createMilCategory, updateMilCategory } from '../../api'; \nimport swal from 'sweetalert';\nimport { PlusOutlined, RestOutlined } from '@ant-design/icons';\nimport MilkData from '../../data/MilkData';\nimport SelectField from '../common/SelectField';\n\n\nconst MilkFom = ({ data , callback, setEditData}) => {\n\n    const initialData = MilkData.reduce((previous, field) => ({...previous,[field.name]: field.defaultValue ? field.defaultValue : ''}),{});\n    const [formData, setFormData] = useState(initialData);\n    const [rateDisbaled, setRateDiabled] = useState(true);\n\n    const onChange = (e) => {\n        setFormData({...formData,[e.target.name]: e.target.value});\n    }\n\n    const onSelectChange = (name, value) => {\n        if(name == 'taxable' ){\n            if( value == 'Yes') setRateDiabled(false);\n            else  setRateDiabled(true);\n        }\n\n        setFormData({...formData,[name]: value});\n        \n    }\n\n    useEffect(() => {\n        setFormData(data);\n    },[data])\n\n    const onSubmit = async (close) => {\n        console.log(formData);\n    \n        if(data) {\n            let response = await updateMilCategory(data.id,formData);\n            console.log(response);\n            if(response?.data?.status == true){\n                swal(\"Succesfully updated milk details\", \"success\");\n            }\n            else{\n                swal(\"OOPS Something Went wrong\", \"error\");\n            }\n        }\n        else{\n            let response = await createMilCategory(formData);\n            console.log(response);\n            if(response?.data?.status == true){\n                swal(\"Succesfully added milk details\", \"success\");\n            }\n            else{\n                swal(\"OOPS Something Went wrong\", \"error\");\n            }\n        }\n        reset();\n        await callback();\n    }\n\n    const reset = () => {\n        setFormData(initialData);\n        setEditData(null);\n    }\n\n    const taxable =  [{ value: 'Yes', name: 'Yes' }, { value: 'No', name: 'No'} ];\n    const gstRate =  [{ value: 0, name: '0 %' },  { value: 1, name: '1 %'}, { value: 1.5, name: '1.5 %'},\n    { value: 3, name: '3 %'}, { value: 5, name: '5 %'}, { value: 7.5, name: '7.5 %'}, { value: 12, name: '12 %'}, { value: 18, name: '18 %'} ];\n\n    return (\n        <>\n            <div id='form-div'>\n                <Row>\n                    { \n                        MilkData.map((field) => field.type == 'input' ?\n                            <InputField\n                                label={field.label}\n                                type={field.inputType} \n                                name={field.name}\n                                onChange={onChange}\n                                key={field.name}\n                                value={formData ? formData[field.name] : ''}\n                            /> :\n                            <SelectField\n                                label={field.label}\n                                option={eval(field.list).map((item) => ({ value: item.value, text: item.name}))}\n                                showSearch\n                                optionFilterProp=\"children\"\n                                value={formData ? formData[field.name] : field.defaultValue}\n                                showArrow={false}\n                                onChange={(value) => onSelectChange(field.name, value)}\n                                filterOption={(input, option) =>\n                                    option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                                }\n                                filterSort={(optionA, optionB) =>\n                                    optionA.children.toLowerCase().localeCompare(optionB.children.toLowerCase())\n                                }\n                                key={field.name}\n                                disabled={field.name == 'gstRate' ? rateDisbaled : false}\n                            />\n                        )\n                    }     \n                </Row>\n                <Row>\n                    <Col span={24} className='text-right'>\n                        <Button onClick={() => reset()} className='mr-4' icon={ <RestOutlined />}>\n                            Reset\n                        </Button>\n                        <Button type=\"primary\" onClick={() => onSubmit()} icon={ <PlusOutlined />} >\n                            { data ? 'Edit' : 'Add' } \n                        </Button>\n                    </Col>\n                \n                </Row>\n            </div>\n        </>\n    );\n};\n\nexport default MilkFom;\n\n// TazzaLitre rate Taaza rate Slim rate Gold rate 200ml rate Double rate 250ml rate Lassi rate Shakti rate\n// LitreDahi rate 200D rate 400D rate Metro rate Rich rate Paneer rate\n// Mistidahi rate Tazza5litre rate\n","import axios from 'axios';\n\nconst url = `http://${window.location.hostname}:8000`;\nconst API = axios.create({ baseURL : url});\n\n\nconst UrlParamsReplace = (url, params = {}, queryParams = {}) => {\n    let urlWithPrefix = `${url}`;\n    if (params) {\n      Object.keys(params).forEach(\n        (key) => (urlWithPrefix = urlWithPrefix.replace(`:${key}`, params[key]))\n      );\n    }\n    const queryParamsWithoutNull = {};\n    if (queryParams) {\n      Object.keys(queryParams).forEach((key) => {\n        if (queryParams[key] !== undefined && queryParams[key] !== null) {\n          queryParamsWithoutNull[key] = queryParams[key];\n        }\n      });\n      const urlSearchParams = new URLSearchParams(queryParamsWithoutNull);\n      urlWithPrefix += `?${urlSearchParams.toString()}`;\n    }\n    return urlWithPrefix;\n  };\n\nexport const getAllCustomers = (search, offset, limit) => API.get(UrlParamsReplace(`/customers`, {}, { search, offset, limit }));\nexport const getCustomersWithDues = (search, offset, limit) => API.get(UrlParamsReplace(`/customers/dues`, {}, { search, offset, limit }));\nexport const createCustomer = (customer) => API.post(\"/customers\", customer);\nexport const updateCustomer = (id, customer) => API.put(`/customers/${id}`, customer);\nexport const deleteCustomer= (id) => API.delete(`/customers/${id}`);\n\nexport const getAllMilkCategories = (customerId, search, offset, limit) => API.get(UrlParamsReplace(`/milk-category`, {}, { customerId, search, offset, limit }));\nexport const createMilCategory = (customer) => API.post(\"/milk-category\", customer);\nexport const updateMilCategory = (id, customer) => API.put(`/milk-category/${id}`, customer);\nexport const deleteMilCategory = (id) => API.delete(`/milk-category/${id}`);\n\nexport const createInvoice = (invoice) => API.post(\"/invoices\", invoice);\nexport const getAllInvoices = (search, offset, limit) => API.get(UrlParamsReplace(`/invoices`, {}, { search, offset, limit }));\nexport const getInvoicesByDate = (date) => API.get(`/invoices?date=${date}`);\nexport const getInvoiceById = (invoiceId) => API.get(`/invoices/${invoiceId}`);\nexport const deleteInvoice = (id) => API.delete(`/invoices/${id}`);\n\nexport const getDueInvoices = (customerId) => API.get(`/customers/${customerId}/unpaid-invoices`);\nexport const createPayments = (customerId, payment) => API.post(`/customers/${customerId}/payments`, payment);\n\nexport const createStocks = (stocks) => API.post(\"/stocks\", { stocks });\nexport const getStocks = () => API.get(\"/stocks\");\nexport const getStocksByDate = (date) => API.get(`/stocks-by-date?date=${date}`);\n\n","const InvoiceData = [\n    {\n        label : \"Invoice No.\",\n        name: 'invoiceNo',\n        type: 'input',\n        inputType: 'text'\n    },\n    {\n        label : \"Date\",\n        name: 'invoiceDate',\n        type: 'input',\n        inputType: 'text'\n    },\n    {\n        label : \"Customer\",\n        name: 'customerName',\n        type: 'input',\n        inputType: 'text'\n    },\n    {\n        label : \"Total Amount\",\n        name: 'total',\n        type: 'select',\n        inputType: 'text',\n        list: \"customerType\"\n    },\n    {\n        label : \"Status\",\n        name: 'paymentStatus',\n        type: 'input',\n        inputType: 'text'\n    },\n    {\n        label : \"Amount Paid\",\n        name: 'amountPaid',\n        type: 'input',\n        inputType: 'text'\n    },\n    {\n        label : \"Date Of Payment\",\n        name: 'paymentDate',\n        type: 'input',\n        inputType: 'text'\n    }\n];\n\nexport default InvoiceData;","import swal from 'sweetalert';\n\nexport function sweetalertValidate(message) {\n    swal({\n        text: message,\n        icon: \"error\",\n        buttons:\n        {\n            cancel: {\n                text: \"Cancel\",\n                value: null,\n                visible: false,\n                className: \"btn-sm btn-default\",\n                closeModal: true,\n            },\n            confirm: {\n                text: \"OK\",\n                value: true,\n                visible: true,\n                className: \"btn-sm btn-primary\",\n                closeModal: true\n            }\n        }\n    });\n}\n\nexport function sweetalertMessage(message) {\n    swal({\n        text: message,\n        icon: \"info\",\n        buttons:\n        {\n            cancel: {\n                text: \"Cancel\",\n                value: null,\n                visible: false,\n                className: \"btn-sm btn-default\",\n                closeModal: true,\n            },\n            confirm: {\n                text: \"OK\",\n                value: true,\n                visible: true,\n                className: \"btn-sm btn-info\",\n                closeModal: true\n            }\n        }\n    });\n}\n\nexport function sweetalertSuccess(message) {\n    swal({\n\t\ttext: \"test message\",\n\t\ticon: \"success\",\n\t\tbuttons:\n\t\t{\n\t\t\tcancel: {\n\t\t\t\ttext: \"Cancel\",\n\t\t\t\tvalue: null,\n\t\t\t\tvisible: false,\n\t\t\t\tclassName: \"btn-sm btn-default\",\n\t\t\t\tcloseModal: true,\n\t\t\t},\n\t\t\tconfirm: {\n\t\t\t\ttext: \"OK\",\n\t\t\t\tvalue: true,\n\t\t\t\tvisible: true,\n\t\t\t\tclassName: \"btn-sm btn-info\",\n\t\t\t\tcloseModal: true\n\t\t\t}\n\t\t}\n\t});\n}\n\nexport function sweetalertOkCancel(message, confirmFunction, cancelFunction) {\n    swal(\n        {\n            text: message,\n            icon: \"warning\",\n            buttons:\n            {\n                cancel: {\n                    text: \"Cancel\",\n                    value: null,\n                    visible: true,\n                    className: \"btn-sm btn-default\",\n                    closeModal: true,\n                },\n                confirm: {\n                    text: \"OK\",\n                    value: true,\n                    visible: true,\n                    className: \"btn-sm btn-danger\",\n                    closeModal: true\n                }\n            }\n        }\n    ).then(\n        function (isConfirm) {\n            if (isConfirm) {\n                confirmFunction();\n            } else {\n                cancelFunction();\n            }\n        }\n\n    );\n}\n\nexport function uuid() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n        var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n        return v.toString(16);\n    });\n}","import React, { useEffect, useState } from 'react';\nimport { Modal, Button, Row, Col, Table, Typography } from 'antd';\nimport InputField from '../common/InputField';\nimport { createPayments, getDueInvoices } from '../../api'; \nimport moment from 'moment';\nimport swal from 'sweetalert';\nimport InvoiceData from '../../data/InvoiceData';\nimport { sweetalertOkCancel, sweetalertSuccess, sweetalertValidate } from '../../util/util';\n\nconst { Title } = Typography;\n\n\nconst PaymentModal = ({ visible , setVisible , customer , callback}) => {\n    const initialData = {\n        amountReceived: 0,\n        additionalDue: 0\n    };\n    const [formData, setFormData] = useState(initialData);\n    const [invoices, setInvoices] = useState([]);\n\n    const onChange = (e) => {\n        setFormData({...formData,[e.target.name]: e.target.value});\n    }\n\n    const fetchInvoices = async (customer) => {\n        const response = await getDueInvoices(customer?.id);\n        console.log(response);\n        setInvoices(response?.data?.entity.map((inv) => ({\n            ...inv,\n            invoiceDate: inv.invoiceDate? moment(inv.invoiceDate).format('DD-MM-YYYY') : null,\n            paymentDate: inv.paymentDate ? moment(inv.paymentDate).format('DD-MM-YYYY') : null\n        })));\n    }\n\n    useEffect(() => {\n        if(customer && visible){\n            fetchInvoices(customer);\n        }\n        \n    },[customer, visible])\n\n    const onSubmit = async (close) => {\n        console.log(formData);\n    \n        \n        let response = await createPayments(customer.id, formData);\n        console.log(response);\n        if(response?.data?.status == true){\n            swal(\"Succesfully Payment done\", 'success');\n        }\n        else{\n            swal(\"OOPS Something Went wrong\", 'error');\n        }\n        \n\n        if(close) setVisible(false);\n\n        await callback();\n        setFormData(initialData);\n    }\n\n    const onClose = () => {\n        sweetalertOkCancel(\n            'Are you sure you want to close without adding amount received ?',\n            () => {\n                setVisible(false)\n            },\n            () => {}\n        );\n    }\n\n    const fieldData = InvoiceData;\n    const columns = fieldData.map((column) => ({\n        title:  ( \n            <Typography.Text ellipsis={true} title={column.label}>\n                {column.label}\n            </Typography.Text>\n        ),\n        dataIndex: column.name,\n        key: column.name,\n        width: '150px'\n    })).filter((column) => column.dataIndex !== 'customerName');\n\n    const totalDue = invoices.reduce((total, invoice) => invoice.total + total, 0);\n\n    return (\n        <>\n        <Modal\n            title={`Payment`}\n            visible={visible}\n            width={\"50%\"}\n            style={{ top: 75 }}\n            keyboard={false}\n            onCancel={() => onClose()}\n            footer={[\n                <Button key=\"cancel\" onClick={() => onClose()}>\n                    Cancel\n                </Button>,\n                <Button key=\"savclose\" type=\"primary\" onClick={() => onSubmit(true)}>\n                    Save\n                </Button>,\n                ]}\n        >\n            <div className=\"site-layout-background p-5 mt-1\">\n                <Title level={3} style={{color: 'rgba(107, 114, 128, var(--tw-text-opacity))'}} className='border-b-2' >{customer?.name}'s Due Invoices</Title>\n                <Row className=\"w-full\">\n                    <Col span={24}>\n                        <Table\n                            dataSource={invoices} \n                            columns={columns}\n                            bordered\n                            pagination={ {}}\n                            rowKey={(record) => record.id + (new Date().getTime() + Math.random() * 10000)}\n                        />\n                    </Col>\n                </Row>\n                <Row className=\"w-full\">\n                    { customer?.previousDue > 0 ? \n                        <>\n                            <Col span={24}>\n                                <Title level={4} style={{color: 'rgba(107, 114, 128, var(--tw-text-opacity))'}}  >\n                                { `Previous Due : ${customer?.previousDue ? Math.round(customer?.previousDue) : 0}`}\n                                </Title>\n                            </Col>\n                            <Col span={24}>\n                                <Title level={4} style={{color: 'rgba(107, 114, 128, var(--tw-text-opacity))'}}  >\n                                { `Due : ${ customer?.due >= 0 ?  Math.round(customer?.due - customer?.previousDue) : 0 }`}\n                                </Title>\n                            </Col>\n                        </> : null\n                    }\n\n                    <Col span={24}>\n                        <Title level={4} style={{color: 'rgba(107, 114, 128, var(--tw-text-opacity))'}}  >\n                           { customer?.due >= 0 ? `Total Due : ${customer?.due}` : `Total Advance : ${-customer?.due}`}\n                        </Title>\n                    </Col>\n                   \n                    <InputField\n                        label={'Amount Received'}\n                        type={'number'} \n                        name={'amountReceived'}\n                        onChange={onChange}\n                        key={'amountReceived'}\n                        value={formData['amountReceived']}\n                        lcol={8}\n                        icol={16}\n                    />\n                     <InputField\n                        label={'Previous Due'}\n                        type={'number'} \n                        name={'additionalDue'}\n                        onChange={onChange}\n                        key={'additionalDue'}\n                        value={formData['additionalDue']}\n                        lcol={8}\n                        icol={16}\n                    />\n                </Row> \n            </div>\n                   \n        </Modal>\n        </>\n    );\n};\n\nexport default PaymentModal;","import React, { useEffect, useState } from 'react';\nimport millify from 'millify';\nimport { Typography, Row, Col, Statistic, Table, Button, Input } from 'antd';\nimport { Link } from 'react-router-dom';\nimport { getAllMilkCategories, getCustomersWithDues, getInvoicesByDate, getStocksByDate } from '../api';\nimport moment from 'moment';\nimport PaymentModal from './Modal/PaymentModal';\nimport { EditOutlined } from '@ant-design/icons';\nimport { uuid } from '../util/util';\n\nconst { Title } = Typography;\n\nconst Homepage = () => {\n\n    const [reportDate, setReportDate] = useState(moment().format('YYYY-MM-DD'))\n \n    const [invoices, setInvoices] = useState([]);\n    const [milk, setMilks] = useState([]);\n    const [customers, setCustomers] = useState([]);\n    const [visible, setVisible] = useState(false);\n    const [selectedCustomer, setSelectedCustomer] = useState(null);\n    const [stocks, setStocks] = useState([]);\n\n    const [currentPage, setCurrentPage] = useState(1);\n    const [pageSize, setPageSize] = useState(20);\n    const [total, setTotal] = useState(0);\n\n    const [search, setSearch] = useState('');\n\n    const fetchInvoices = async (date) => {\n        const response = await getInvoicesByDate(date);\n        console.log(response);\n        setInvoices(response?.data?.entity);\n    }\n\n    const fetchMilkCategories = async () => {\n      const response = await getAllMilkCategories();\n      setMilks(response?.data?.entity.rows);\n    }\n\n    const fetchCustomers = async (date) => {\n      const response = await getCustomersWithDues(search, (currentPage - 1) * pageSize, pageSize );\n      console.log(response);\n      setCustomers(response?.data?.entity.rows);\n      setTotal(response?.data?.entity.count);\n  }\n    const getStocks = async (date) => {\n      const response = await getStocksByDate(date);\n      console.log(response);\n      setStocks(response?.data?.entity);\n    } \n\n    const onChangeReportDate = (e) => {\n      setReportDate(e.target.value);\n    }\n\n    useEffect(async () => {\n        await fetchMilkCategories();\n        await fetchInvoices(reportDate);\n        await getStocks(reportDate)\n    },[reportDate]);\n\n    useEffect(() => {\n      fetchCustomers();\n    },[currentPage, pageSize, search]);\n\n    const columns = milk.length > 0 ? [{\n          title:  ( \n              <Typography.Text ellipsis={true} title={'Customers'}>\n                  {'Customers'}\n              </Typography.Text>\n          ),\n          dataIndex: 'customer',\n          key: 'customer',\n          width: '150px',\n          fixed: 'left',\n      },\n      ...(milk.map((ele) => ({\n          title:  ( \n            <Typography.Text ellipsis={true} title={ele.name}>\n                {ele.name}\n            </Typography.Text>\n          ),\n          dataIndex: ele.id,\n          key: ele.id,\n          width: '150px'\n        })))] : [];\n\n\n    const totalStocksMap = stocks.reduce((acc, ele) => ({ ...acc, [ele.categoryId]: ele.carryForward + ele.morningQuantity + ele.eveningQuantity }), {});\n    const totalSoldStockMap = {};\n    for(let i = 0; i < milk.length ; i++){\n      totalSoldStockMap[milk[i].id] = 0;\n    }\n\n    const dataSource = invoices.map((customer) => {\n      const data = {\n        customer: customer.name\n      }\n      for(let i = 0; i < milk.length ; i++){\n        data[milk[i].id] = 0;\n      }\n      const invs = customer.invoices;\n      for(let i = 0; i < invs.length ; i++){\n        const milkCategory = invs[i].milkCategory;\n        for(let j = 0; j < milkCategory.length ; j++){\n          const catId = milkCategory[j].categoryId || milkCategory[j].id;\n          if(data[catId] == undefined){\n            data[catId] = 0;\n          }\n          data[catId] += milkCategory[j].Transaction.quantity;\n          totalSoldStockMap[catId] += milkCategory[j].Transaction.quantity;\n        }\n      }\n      return data;\n    });\n\n    const totalDataSource = [{\n      id: uuid(),\n      customer: 'Total Stock',\n      ...totalStocksMap\n    },\n    {\n      id: uuid(),\n      customer: 'Total Sold',\n      ...totalSoldStockMap\n    },\n    {\n      id: uuid(),\n      customer: 'Total Remaining',\n      ...Object.keys(totalStocksMap).reduce((acc, ele) => ({ ...acc, [ele]: totalStocksMap[ele] - totalSoldStockMap[ele] }), {})\n    }]\n    const customerColumns = [{\n      title:  ( \n          <Typography.Text ellipsis={true} title={'Customers'}>\n              {'Customers'}\n          </Typography.Text>\n      ),\n      dataIndex: 'name',\n      key: 'customer',\n      width: '40%'\n    },\n    {\n      title:  ( \n          <Typography.Text ellipsis={true} title={'Dues'}>\n              {'Due / Advance'}\n          </Typography.Text>\n      ),\n      key: 'dues',\n      width: '40%',\n      render: (data) => {\n        if(data.due == 0 || data.due == null) return  <div key={'due'+data.id}> {data.due} </div>;\n        return data.due > 0 ?\n         <div key={'due'+data.id} className='text-red-800'>{data.due} (Due)</div> :\n         <div key={'due'+data.id} className='text-green-800'>{-data.due} (Advance)</div>;\n      }\n    },\n    {\n      title: 'Payments',\n      key: 'operation',\n      width: '10%',\n      render: (data) => {\n          return (\n              <div className=\"float-right\">\n                  <Button key={'edit'+data.id} type=\"primary\" onClick={() => onPayment(data)} title=\"Edit\">\n                      <EditOutlined /> Pay\n                  </Button>\n              </div>\n          );\n      }\n    }\n    ];\n\n    const onPayment = (customer) => {\n      setSelectedCustomer(customer)\n      setVisible(true);\n    }\n\n    const handlePageChange = (page) => {\n      setCurrentPage(page);\n    };\n  \n    const handlePageSizeChange = (current, size) => {\n      setPageSize(size);\n      setCurrentPage(1);\n    };\n\n  \n    const initpageSizeOptions = [10, 20, 50, 100];\n    const pageSizeOptions = [];\n    while(initpageSizeOptions.length > 0 && initpageSizeOptions[0] < total ){\n        pageSizeOptions.push(initpageSizeOptions[0] + '');\n        initpageSizeOptions.shift();\n    }\n    if(total > 10) pageSizeOptions.push( total + '');\n\n    return (\n      <>\n          <div  style={{ height: 'calc(100vh - 150px)', overflowY :'auto', overflowX: 'hidden'}}>\n          <Title level={2} className=\"heading\" id='mainheader'>Today's Report</Title>\n            <Row gutter={[32, 32]}>\n                  <Col span={4}><Statistic title=\"Total Collection\" value={ millify(0) }/></Col>\n                  <Col span={4}><Statistic title=\"Total Stocks\" value={millify( 0)}/></Col>\n                  <Col span={4}><Statistic title=\"Total Stocks Left\" value={millify( 0)}/></Col>\n                  <Col span={4}><Statistic title=\"Total Invoices Generated\" value={millify( 0)}/></Col>\n                  <Col span={4}><Statistic title=\"Total New Customers Added\" value={millify( 0)}/></Col>\n            </Row>\n            <div className=\"site-layout-background p-5 mt-1\">\n              <div style={{color: 'rgba(107, 114, 128, var(--tw-text-opacity))'}} className='flex border-b-2' >\n                <Title level={3} >Sales Report {/*moment(reportDate).format('DD-MM-YYYY')*/}</Title>\n                <div className=''>\n                  <Row>\n                    <Input\n                        type={'date'} \n                        name={'reportDate'}\n                        onChange={onChangeReportDate}\n                        key={'invoiceDate'}\n                        value={reportDate}\n                        className='ml-2'\n                      /> \n                  </Row>\n                </div>\n                \n                \n              </div>\n               \n                <Row className=\"w-full overflow-y-auto \" >\n                    <Col span={24}>\n                        <Table\n                            dataSource={dataSource} \n                            columns={columns}\n                            bordered\n                            scroll={{ x: 1600, y: 384 }}\n                            pagination={false}\n                            rowKey={(record) => record.id + (new Date().getTime() + Math.random() * 10000)}\n                        />\n                    </Col>\n                </Row>\n\n                <Row className=\"w-full overflow-y-auto \" >\n                    <Col span={24}>\n                        <Table\n                            dataSource={totalDataSource} \n                            columns={columns}\n                            bordered\n                            scroll={{ x: 1600}}\n                            pagination={false}\n                            rowKey={(record) => record.id + (new Date().getTime() + Math.random() * 10000)}\n                            showHeader={false}\n                        />\n                    </Col>\n                </Row> \n            </div>\n\n            <div className=\"site-layout-background p-5 mt-1\">\n              <div style={{color: 'rgba(107, 114, 128, var(--tw-text-opacity))'}} className='border-b-2' >\n                <Title level={3} >All Customers</Title>\n              </div>\n              <div className='mb-2'>\n                    <Row className=\"w-full\">\n                        <Col span={12}>\n                            <Input\n                                placeholder=\"Search...\"\n                                value={search}\n                                onChange={e => setSearch(e.target.value)}\n                            />\n                        </Col>\n                    </Row>\n                </div>\n                <Row className=\"w-full\">\n                    <Col span={24}>\n                        <Table\n                            dataSource={customers} \n                            columns={customerColumns}\n                            bordered\n                            pagination={{ \n                              position: ['bottomRight', 'topRight'], \n                              pageSizeOptions,\n                              current: currentPage,\n                              pageSize: pageSize,\n                              onChange: handlePageChange,\n                              onShowSizeChange: handlePageSizeChange,\n                              total,\n                              showSizeChanger: true\n                           }}\n                            rowKey={(record) => record.id + (new Date().getTime() + Math.random() * 10000)}\n                        />\n                    </Col>\n                </Row>\n                <PaymentModal visible={visible} setVisible={setVisible} customer={selectedCustomer}  callback={fetchCustomers}/> \n            </div>\n          </div>\n      </>\n    );\n};\n\nexport default Homepage;\n\n\n\n","import React, { useState, useEffect } from 'react';\nimport { Button, Menu, Typography, Avatar } from 'antd';\nimport { Link } from 'react-router-dom';\nimport { HomeOutlined, MoneyCollectOutlined, BulbOutlined, FundOutlined, MenuOutlined, UsergroupAddOutlined, StrikethroughOutlined } from '@ant-design/icons';\n\nimport icon from '../images/cryptocurrency.png';\n\nconst Navbar = () => {\n  const [activeMenu, setActiveMenu] = useState(true);\n  const [screenSize, setScreenSize] = useState(undefined);\n\n  useEffect(() => {\n    const handleResize = () => setScreenSize(window.innerWidth);\n\n    window.addEventListener('resize', handleResize);\n\n    handleResize();\n\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  useEffect(() => {\n    if (screenSize <= 800) {\n      setActiveMenu(false);\n    } else {\n      setActiveMenu(true);\n    }\n  }, [screenSize]);\n\n  return (\n    <div className=\"nav-container  h-screen\">\n      <div className=\"logo-container\">\n        <Typography.Title level={2} className=\"logo\"><Link to=\"/\">AMMS</Link></Typography.Title>\n        <Button className=\"menu-control-container\" onClick={() => setActiveMenu(!activeMenu)}><MenuOutlined /></Button>\n      </div>\n      {activeMenu && (\n      <Menu theme=\"dark\" >\n        <Menu.Item icon={<HomeOutlined />}>\n          <Link to=\"/\">Home</Link>\n        </Menu.Item>\n        <Menu.Item icon={<UsergroupAddOutlined />}>\n          <Link to=\"/customers\">Customers</Link>\n        </Menu.Item>\n        <Menu.Item icon={<MoneyCollectOutlined />}>\n          <Link to=\"/invoices\">Invoices</Link>\n        </Menu.Item>\n        <Menu.Item icon={<BulbOutlined />}>\n          <Link to=\"/milk-category\">Milk Rates</Link>\n        </Menu.Item>\n        <Menu.Item icon={<StrikethroughOutlined />}>\n          <Link to=\"/stocks\">Stocks</Link>\n        </Menu.Item>\n      </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default Navbar;\n","export default __webpack_public_path__ + \"static/media/cryptocurrency.1548aced.png\";","import React, { useEffect, useState } from 'react';\nimport millify from 'millify';\nimport { Typography, Row, Col, Statistic, Table, Button, Input } from 'antd';\nimport CustomerForm from './Forms/CustomerForm';\nimport { deleteCustomer, getAllCustomers } from '../api';\nimport CustomerData from '../data/CustomerData';\nimport { DeleteOutlined, EditOutlined } from '@ant-design/icons';\nimport { sweetalertMessage, sweetalertValidate } from '../util/util';\n\nconst { Title } = Typography;\n\nconst Customer = () => {\n\n    const [customers, setCustomrs] = useState(null);\n    const [editData, setEditData] = useState(null);\n\n    const [currentPage, setCurrentPage] = useState(1);\n    const [pageSize, setPageSize] = useState(20);\n    const [total, setTotal] = useState(0);\n\n    const [search, setSearch] = useState('');\n\n    const fetchCustomers = async () => {\n        const response = await getAllCustomers(search, (currentPage - 1) * pageSize, pageSize);\n        setCustomrs(response?.data?.entity.rows);\n        setTotal(response?.data?.entity.count);\n    }\n\n    useEffect(() => {\n        fetchCustomers();\n      },[currentPage, pageSize, search]);\n\n    const onEdit = (data) => {\n        setEditData({...data});\n        setTimeout(() => document.getElementById('form-div').scrollIntoView(), 2);\n    }\n\n    const  onDelete = async (data) => {\n        const isConfirm = confirm('Are you sure you want to delete ?')\n        if(isConfirm){\n            const response = await deleteCustomer(data.id);\n            if(response?.data?.status){\n                sweetalertMessage('Succesfully Deleted')\n            }\n            else{\n                sweetalertValidate('OOPS!! Something went wrong')\n            }\n            fetchCustomers();\n        } \n    }\n\n    const fieldData = CustomerData;\n    const columns = fieldData.map((column) => ({\n        title:  ( \n            <Typography.Text ellipsis={true} title={column.label}>\n                {column.label}\n            </Typography.Text>\n        ),\n        dataIndex: column.name,\n        key: column.name,\n        width: '150px'\n    }));\n\n    columns.push({\n        title: 'Action',\n        key: 'operation',\n        width: 10,\n        render: (data) => {\n            return (\n                <div className=\"float-right\">\n                    <Button key={'edit'+data.id} type=\"primary\" onClick={() => onEdit(data)} title=\"Edit\">\n                        <EditOutlined />\n                    </Button>\n                    \n                    <Button key={'delete'+data.id} type=\"secondary\" onClick={() => onDelete(data)} className=\"ml-2\" title=\"Delete\">\n                        <DeleteOutlined />\n                    </Button>\n                </div>\n            );\n        },\n    });\n\n    const handlePageChange = (page) => {\n        setCurrentPage(page);\n      };\n    \n      const handlePageSizeChange = (current, size) => {\n        setPageSize(size);\n        setCurrentPage(1);\n      };\n  \n    \n      const initpageSizeOptions = [10, 20, 50, 100];\n      const pageSizeOptions = [];\n      while(initpageSizeOptions.length > 0 && initpageSizeOptions[0] < total ){\n          pageSizeOptions.push(initpageSizeOptions[0] + '');\n          initpageSizeOptions.shift();\n      }\n      if(total > 10) pageSizeOptions.push( total + '');\n\n    return (\n        <div  style={{ height: 'calc(100vh - 150px)', overflowY :'auto'}}>\n            <div className=\"site-layout-background p-5\">\n                <Title level={3} style={{color: 'rgba(107, 114, 128, var(--tw-text-opacity))'}} className='border-b-2' >{editData ? 'Edit' : 'Add'} Customer { editData ? `(${editData.name})`: '' }</Title>\n                <CustomerForm data={editData} callback={fetchCustomers} setEditData={setEditData}/>\n            </div>\n            <div className=\"site-layout-background p-5 mt-1\">\n                <Title level={3} style={{color: 'rgba(107, 114, 128, var(--tw-text-opacity))'}} className='border-b-2' >Customers</Title>\n                <div className='mb-2'>\n                    <Row className=\"w-full\">\n                        <Col span={12}>\n                            <Input\n                                placeholder=\"Search...\"\n                                value={search}\n                                onChange={e => setSearch(e.target.value)}\n                            />\n                        </Col>\n                    </Row>\n                </div>\n                <Row className=\"w-full\">\n                    <Col span={24}>\n                        <Table\n                            dataSource={customers} \n                            columns={columns}\n                            bordered\n                            pagination={{ \n                                position: ['bottomRight', 'topRight'], \n                                pageSizeOptions,\n                                current: currentPage,\n                                pageSize: pageSize,\n                                onChange: handlePageChange,\n                                onShowSizeChange: handlePageSizeChange,\n                                total,\n                                showSizeChanger: true\n                             }}\n                            rowKey={(record) => record.id + (new Date().getTime() + Math.random() * 10000)}\n                        />\n                    </Col>\n                </Row> \n            </div>\n        </div>\n    );\n};\n\nexport default Customer;\n","import React, { useEffect, useState } from 'react';\nimport millify from 'millify';\nimport { Typography, Row, Col, Statistic, Table, Button, Input } from 'antd';\nimport { deleteMilCategory, getAllMilkCategories } from '../api';\nimport { DeleteOutlined, EditOutlined } from '@ant-design/icons';\nimport MilkData from '../data/MilkData';\nimport MilkFom from './Forms/MilkForm';\nimport { sweetalertMessage, sweetalertValidate } from '../util/util';\n\nconst { Title } = Typography;\n\nconst MilkCategory = () => {\n\n    const [milk, setMilks] = useState(null);\n    const [editData, setEditData] = useState(null);\n\n\n    const [currentPage, setCurrentPage] = useState(1);\n    const [pageSize, setPageSize] = useState(20);\n    const [total, setTotal] = useState(0);\n\n    const [search, setSearch] = useState('');\n\n\n    const fetchMilkCategories = async () => {\n        const response = await getAllMilkCategories(null, search, (currentPage - 1) * pageSize, pageSize);\n        setMilks(response?.data?.entity.rows);\n        setTotal(response?.data?.entity.count);\n    }\n\n    useEffect(() => {\n        fetchMilkCategories();\n    },[currentPage, pageSize, search]);\n\n\n    const onEdit = (data) => {\n        setEditData({...data});\n        setTimeout(() => document.getElementById('form-div').scrollIntoView(), 2);\n    }\n\n    const  onDelete = async (data) => {\n        const isConfirm = confirm('Are you sure you want to delete ?')\n        if(isConfirm){\n            const response = await deleteMilCategory(data.id);\n            if(response?.data?.status){\n                sweetalertMessage('Succesfully Deleted')\n            }\n            else{\n                sweetalertValidate('OOPS!! Something went wrong')\n            }\n            fetchMilkCategories();\n        } \n    }\n\n    const fieldData = MilkData;\n    const columns = fieldData.map((column) => ({\n        title:  ( \n            <Typography.Text ellipsis={true} title={column.label}>\n                {column.label}\n            </Typography.Text>\n        ),\n        dataIndex: column.name,\n        key: column.name,\n        width: '150px'\n    }));\n\n    columns.push({\n        title: 'Action',\n        key: 'operation',\n        width: 10,\n        render: (data) => {\n            return (\n                <div className=\"float-right\">\n                    <Button key={'edit'+data.id} type=\"primary\" onClick={() => onEdit(data)} title=\"Edit\">\n                        <EditOutlined />\n                    </Button>\n                    \n                    <Button key={'delete'+data.id} type=\"secondary\" onClick={() => onDelete(data)} className=\"ml-2\" title=\"Delete\">\n                        <DeleteOutlined />\n                    </Button>\n                </div>\n            );\n        },\n    });\n\n\n    const handlePageChange = (page) => {\n        setCurrentPage(page);\n      };\n    \n      const handlePageSizeChange = (current, size) => {\n        setPageSize(size);\n        setCurrentPage(1);\n      };\n  \n    \n      const initpageSizeOptions = [10, 20, 50, 100];\n      const pageSizeOptions = [];\n      while(initpageSizeOptions.length > 0 && initpageSizeOptions[0] < total ){\n          pageSizeOptions.push(initpageSizeOptions[0] + '');\n          initpageSizeOptions.shift();\n      }\n      if(total > 10) pageSizeOptions.push( total + '');\n\n    return (\n        <div style={{ height: 'calc(100vh - 150px)', overflowY :'auto'}}>\n            <div className=\"site-layout-background p-5\">\n                <Title level={3} style={{color: 'rgba(107, 114, 128, var(--tw-text-opacity))'}} className='border-b-2' >{editData ? 'Edit' : 'Add'} Milk Category { editData ? `(${editData.name})`: '' }</Title>\n                <MilkFom data={editData} callback={fetchMilkCategories} setEditData={setEditData}/>\n            </div>\n            <div className=\"site-layout-background p-5 mt-1\">\n                <Title level={3} style={{color: 'rgba(107, 114, 128, var(--tw-text-opacity))'}} className='border-b-2' >Milk Categories</Title>\n                <div className='mb-2'>\n                    <Row className=\"w-full\">\n                        <Col span={12}>\n                            <Input\n                                placeholder=\"Search...\"\n                                value={search}\n                                onChange={e => setSearch(e.target.value)}\n                            />\n                        </Col>\n                    </Row>\n                </div>\n                <Row className=\"w-full\">\n                    <Col span={24}>\n                        <Table\n                            dataSource={milk} \n                            columns={columns}\n                            bordered\n                            pagination={{ \n                                position: ['bottomRight', 'topRight'], \n                                pageSizeOptions,\n                                current: currentPage,\n                                pageSize: pageSize,\n                                onChange: handlePageChange,\n                                onShowSizeChange: handlePageSizeChange,\n                                total,\n                                showSizeChanger: true\n                             }}\n                            rowKey={(record) => record.id + (new Date().getTime() + Math.random() * 10000)}\n                        />\n                    </Col>\n                </Row> \n            </div>\n        </div>\n    );\n};\n\nexport default MilkCategory;\n","import React, { useContext, useEffect, useRef, useState } from 'react';\nimport { Button, Form, Input, Popconfirm, Select, Table } from 'antd';\nimport { getAllMilkCategories } from '../../api';\n\nconst EditableContext = React.createContext(null);\n\nconst EditableRow = ({ index, ...props }) => {\n  const [form] = Form.useForm();\n  return (\n    <Form form={form} component={false}>\n      <EditableContext.Provider value={form}>\n        <tr {...props} />\n      </EditableContext.Provider>\n    </Form>\n  );\n};\n\nconst EditableCell = ({\n  title,\n  editable,\n  children,\n  dataIndex,\n  record,\n  handleSave,\n  customerData,\n  milk,\n  ...restProps\n}) => {\n    const [editing, setEditing] = useState(false);\n    const inputRef = useRef(null);\n    const form = useContext(EditableContext);\n    \n    useEffect(() => {\n        if (editing) {\n            inputRef.current.focus();\n        }\n    }, [editing]);\n\n    const toggleEdit = () => {\n        // setEditing(!editing);\n        form.setFieldsValue({\n        [dataIndex]: record[dataIndex],\n        });\n    };\n\n\n  const onSave = (name, value) => {\n    let newValues = {};\n    if( dataIndex === 'categoryName'){\n        const gstRate = customerData.type == 'special' ? milk[value].normal.gstRate : milk[value].gstRate;\n        newValues = { categoryName: milk[value].name, categoryId: value, rate: milk[value].rate, gstRate };\n        if(record.quantity != undefined){\n          newValues.total = Math.round(parseFloat(newValues.rate) * parseFloat(record.quantity) * 10) / 10;\n          newValues.totalWithTax = Math.round((newValues.total + (newValues.total * newValues.gstRate) / 100) * 10) / 10;\n        }\n    }\n\n    if(dataIndex == 'quantity' && record.rate != undefined){\n      newValues = { quantity: value };\n      newValues.total =  Math.round(parseFloat(record.rate) * parseFloat(value) * 10) / 10;\n      newValues.totalWithTax = Math.round((newValues.total + (newValues.total * record.gstRate) / 100) * 10) / 10 ;\n    }\n\n    handleSave({ ...record, ...newValues });\n  }\n\n    let childNode = children;\n\n    if (editable) {\n        //childNode = editing ? (\n        childNode = record.categoryName != 'Total Amount' ?  ( <Form.Item\n            style={{\n            margin: 0,\n            }}\n            name={dataIndex}\n            rules={[\n            {\n                required: true,\n                message: `${title} is required.`,\n            },\n            ]}\n        >\n            { dataIndex !== 'categoryName' ? \n                <Input onChange={(e) => onSave(dataIndex, e.target.value)} /> :\n                <Select\n                    label={'Customer'}\n                    editable\n                    showSearch\n                    optionFilterProp=\"children\"\n                    showArrow={false}\n                    onChange={(value) => onSave(dataIndex, value)}\n                    filterOption={(input, option) =>\n                        option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                    }\n                    filterSort={(optionA, optionB) =>\n                        optionA.children.toLowerCase().localeCompare(optionB.children.toLowerCase())\n                    }\n                    key={'customerId'}\n                >\n                    { Object.values(milk).map((ele,index) => <Option value={ele.id} key={index}>{ele.name}</Option>) }\n                </Select>\n            }\n        </Form.Item>\n        ) : (\n        <div\n            className=\"editable-cell-value-wrap font-bold\"\n            style={{\n              paddingRight: 24,\n              fontSize: '16px',\n            }}\n        >\n            {children}\n        </div>\n        );\n    }\n\n    return <td {...restProps}>{childNode}</td>;\n};\n\nconst EditableTable = ({ setTransactions, customerData, transactions, milk, notEditable }) => {\n  const [dataSource, setDataSource] = useState([]);\n  const [count, setCount] = useState(0);\n\n  useEffect(() => {\n    setDataSource(transactions);\n  },[transactions])\n\n  const handleDelete = (key) => {\n    const newData = dataSource.filter((item) => item.key !== key);\n    setDataSource(newData);\n  };\n\n  const defaultColumns = [\n    {\n      title: 'Item Name',\n      dataIndex: 'categoryName',\n      width: '35%',\n      editable: !notEditable\n    },\n    {\n      title: 'Rate',\n      dataIndex: 'rate',\n      width: '10%',\n    },\n    {\n      title: 'Quantity',\n      dataIndex: 'quantity',\n      width: '10%',\n      editable: !notEditable\n    },\n    {\n      title: 'Total',\n      dataIndex: 'total',\n      width: '10%',\n    },\n    {\n      title: 'GST Rate (%)',\n      dataIndex: 'gstRate',\n      width: '10%',\n    },\n    {\n      title: 'Total( inc. tax)',\n      dataIndex: 'totalWithTax',\n      width: '10%',\n    },\n  ];\n\n  if(!notEditable){\n    defaultColumns.push({\n      title: 'Action',\n      dataIndex: 'operation',\n      width: '5%',\n      render: (_, record) =>\n       record.categoryName !== 'Total Amount' ? dataSource.length >= 1 ? (\n          <Popconfirm title=\"Sure to delete?\" onConfirm={() => handleDelete(record.key)}>\n            <a>Delete</a>\n          </Popconfirm>\n        ) : null : null,\n    })\n  }\n\n  const handleAdd = () => {\n    const newData = {\n      key: count,\n      categoryName: `Select Item`,\n      rate: '0',\n      quantity: `0`,\n      total: 0,\n      gstRate: 0,\n      totalWithTax: 0\n    };\n    setDataSource([...dataSource, newData]);\n    setCount(count + 1);\n  };\n\n  const handleSave = (row) => {\n    const newData = [...dataSource];\n    const index = newData.findIndex((item) => row.key === item.key);\n    const item = newData[index];\n    newData.splice(index, 1, { ...item, ...row });\n    setDataSource(newData);\n    setTransactions(newData);\n  };\n\n  const components = {\n    body: {\n      row: EditableRow,\n      cell: EditableCell,\n    },\n  };\n  const columns = defaultColumns.map((col) => {\n\n    return {\n      ...col,\n      onCell: (record, index) => {\n        let __ = {};\n        if(record.categoryName == 'Total Amount' && col.dataIndex == 'categoryName' ){\n          __ = {\n            colSpan: 5\n          }\n        }\n\n        if(record.categoryName == 'Total Amount' && (col.dataIndex == 'quantity' || col.dataIndex == 'rate' || col.dataIndex == 'gstRate' || col.dataIndex == 'total') ){\n          __ = {\n            colSpan: 0\n          }\n        }\n        if (!col.editable) {\n          return __;\n        }\n        \n        return ({\n            record,\n            editable: col.editable,\n            dataIndex: col.dataIndex,\n            title: col.title,\n            handleSave,\n            customerData,\n            milk,\n            ...__\n          })\n        },\n    };\n  });\n\n  const totalRow = {\n    key: count + 2,\n    categoryName: `Total Amount`,\n    totalWithTax: Math.round(dataSource.reduce((total, current) => total + current.totalWithTax, 0))\n  }\n  return (\n    <div>\n      { !notEditable ? \n        <Button\n          onClick={handleAdd}\n          type=\"primary\"\n          style={{\n            marginBottom: 16,\n          }}\n        > \n        Add a item\n      </Button> : null }\n      <Table\n        components={components}\n        rowClassName={() => 'editable-row'}\n        bordered\n        dataSource={[...dataSource, totalRow]}\n        columns={columns}\n        pagination={false}\n      />\n    </div>\n  );\n};\n\nexport default EditableTable;","import React, { useEffect, useState } from 'react';\nimport { Modal, Button, Row, Col, Table, Typography } from 'antd';\nimport InputField from '../common/InputField';\nimport { createInvoice, getAllMilkCategories } from '../../api'; \nimport swal from 'sweetalert';\nimport SelectField from '../common/SelectField';\nimport { PlusOutlined, RestOutlined } from '@ant-design/icons';\nimport EditableTable from '../common/EditableTable';\nimport moment from 'moment';\nimport { sweetalertValidate } from '../../util/util';\n\n\nconst InvoiceForm = ({ data, customers , callback, setEditData}) => {\n    const initialData = { \n        invoiceNo:'' ,\n        customerId: '' , \n        total: '', \n        transactions: [], \n        invoiceDate: moment().format('YYYY-MM-DD')\n    }\n\n    const [formData, setFormData] = useState(initialData);\n    const customerMap = customers ? customers.reduce((previous, current) => ({...previous,[current.id]: current}), {}) : {};\n    const [milk, setMilks] = useState({});\n    const [newCustomers, setNewCustomers] = useState([]);\n\n    const fetchMilkCategories = async () => {\n        const customerData = formData && formData.customerId && customerMap[formData.customerId]\n        const response = await getAllMilkCategories(customerData && customerData.type == 'special' ? customerData.id : undefined);\n        const milkMap = response?.data?.entity?.rows.reduce((previous, current) => ({...previous, [current.id]: current}), {});\n        setMilks(milkMap);\n    }\n\n    useEffect(async () => {\n        await fetchMilkCategories();\n    }, [formData]);\n\n    const onChange = (e) => {\n        setFormData({...formData,[e.target.name]: e.target.value});\n    }\n\n    const onSelectChange = (name, value) => {\n        console.log('cust', value);\n        setFormData({...formData,[name]: value});\n    }\n\n    const onSubmit = async (close) => {\n        console.log(formData);\n        if(!formData.transactions || formData.transactions?.length == 0){\n            sweetalertValidate('Please insert atleast one item');\n            return;\n        }\n        \n        if(formData.customerId == ''){\n            sweetalertValidate('Please select customer');\n            return;\n        }\n\n        formData.transactions = formData.transactions.filter((transaction) => transaction.categoryId);\n        if(formData.transactions.length == 0){\n            sweetalertValidate('No Items selected');\n            return;\n        }\n        formData.total = Math.round(formData.transactions.reduce((total,t) => total + (t.totalWithTax), 0));\n        formData.existingUser = !!customerMap[formData.customerId];\n    \n        let response = await createInvoice(formData);\n        console.log(response);\n        if(response?.data?.status == true){\n            swal(\"Succesfully generated invoice details\", \"success\");\n            reset();    \n            await callback(formData.customerId, response.data.entity.customer);\n        }\n        else{\n            swal(\"OOPS Something Went wrong\", \"error\");\n        }\n        \n    }\n\n    const reset = () => {\n        setFormData(initialData);\n    }\n\n    const setTransactions = (transactions) => {\n        setFormData({...formData,'transactions': transactions});\n    }\n\n    const handleSearch = (value) => {\n        if (value) {\n            setNewCustomers([{ value: value, text: value }]);\n        }\n    }\n\n    return (\n        <>\n            <div id='form-div'>\n                <Row>\n                    <SelectField\n                        label={'Customer'}\n                        option={customers ? [...customers.map((item) => ({ value: item.id, text: item.name})), ...newCustomers] : [...newCustomers]}\n                        showSearch\n                        optionFilterProp=\"children\"\n                        value={formData ? formData['customerId'] : ''}\n                        showArrow={false}\n                        onSearch={(value) => handleSearch(value)}\n                        onChange={(value) => onSelectChange('customerId', value)}\n                        filterOption={(input, option) =>\n                            option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                        }\n                        filterSort={(optionA, optionB) =>\n                            optionA.children.toLowerCase().localeCompare(optionB.children.toLowerCase())\n                        }\n                        key={'customerId'}\n                    /> \n                    <InputField\n                        label={'Dated'}\n                        type={'date'} \n                        name={'invoiceDate'}\n                        onChange={onChange}\n                        key={'invoiceDate'}\n                        value={formData ? formData['invoiceDate'] : ''}\n                    />     \n                </Row>\n                <Row>\n                    <Col  span={24}>\n                        <EditableTable \n                            setTransactions={setTransactions}\n                            customerData={formData && formData.customerId && ( customerMap[formData.customerId] || { type: 'normal' } ) }\n                            transactions={formData && formData.transactions}\n                            milk={milk}\n                        />\n                    </Col>\n                </Row>\n                <Row>\n                    <Col span={24} className='text-right'>\n                        <Button onClick={() => reset()} className='mr-4' icon={ <RestOutlined />}>\n                            Reset\n                        </Button>\n                        <Button type=\"primary\" onClick={() => onSubmit()} icon={ <PlusOutlined />} >\n                            { 'Generate Invoice' } \n                        </Button>\n                    </Col>\n                \n                </Row>\n            </div>\n        </>\n    );\n};\n\nexport default InvoiceForm;\n","import React, { useEffect, useState } from 'react';\nimport { Modal, Button, Row, Col, Table, Typography } from 'antd';\nimport { getAllMilkCategories, getInvoiceById } from '../../api'; \nimport moment from 'moment';\nimport EditableTable from '../common/EditableTable';\n\nconst { Title } = Typography;\n\n\nconst InvoiceDetailsModal = ({ visible , setVisible , invoiceId }) => {\n    const [invoiceDetails, setInvoiceDetails] = useState({\n        transactions: []\n    });\n    const [milk, setMilks] = useState({});\n\n    const fetchInvoicesDetails = async (invoiceId) => {\n        const response = await getInvoiceById(invoiceId);\n        console.log(response);\n\n        const transactions = response?.data?.entity.milkCategory.map((element) => {\n            const total  = element.Transaction.rate * element.Transaction.quantity;\n            return ({\n                categoryName: element.name,\n                rate: element.Transaction.rate,\n                quantity: element.Transaction.quantity,\n                total: element.Transaction.rate * element.Transaction.quantity,\n                gstRate: element.gstRate,\n                totalWithTax: Math.round((total + (total * element.gstRate) / 100) * 10) / 10\n            })\n        })\n\n        setInvoiceDetails({ ...response?.data?.entity, transactions});\n    }\n\n    useEffect(async () => {\n        console.log('calling', invoiceId);\n        if(invoiceId){\n            await fetchInvoicesDetails(invoiceId);\n        }\n    }, [invoiceId]);\n\n    return (\n        <>\n        <Modal\n            title={`Invoice Details`}\n            visible={visible}\n            width={\"50%\"}\n            style={{ top: 75 }}\n            keyboard={false}\n            onCancel={() => setVisible(false)}\n            footer={[]}\n        >\n            <div className=\"site-layout-background p-5 mt-1\">\n                <Row>\n                    <Col span={12}>\n                        <Title level={3} style={{color: 'rgba(107, 114, 128, var(--tw-text-opacity))'}} className='border-b-2' >\n                            Customer Name : {invoiceDetails?.customer?.name}\n                        </Title>\n                    </Col>\n                    <Col span={12}>\n                        <Title level={3} style={{color: 'rgba(107, 114, 128, var(--tw-text-opacity))'}} className='border-b-2' >\n                            Dated : { moment(invoiceDetails?.invoiceDate).format('DD-MM-YYYY') }\n                        </Title>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col  span={24}>\n                        <EditableTable\n                            customerData={invoiceDetails && invoiceDetails.customerId && invoiceDetails?.customer}\n                            transactions={invoiceDetails && invoiceDetails?.transactions }\n                            milk={{}}\n                            notEditable={true}\n                        />\n                    </Col>\n                </Row>\n            </div>\n                   \n        </Modal>\n        </>\n    );\n};\n\nexport default InvoiceDetailsModal;","import React, { useEffect, useState } from 'react';\nimport millify from 'millify';\nimport { Typography, Row, Col, Statistic, Table, Button, Input } from 'antd';\nimport CustomerForm from './Forms/CustomerForm';\nimport { deleteInvoice, getAllCustomers, getAllInvoices } from '../api';\nimport InvoiceData from '../data/InvoiceData';\nimport { DeleteOutlined, EditOutlined } from '@ant-design/icons';\nimport InvoiceForm from './Forms/InvoiceForm';\nimport moment from 'moment';\nimport PaymentModal from './Modal/PaymentModal';\nimport InvoiceDetailsModal from './Modal/InvoiceDetailModal';\nimport { sweetalertMessage, sweetalertValidate } from '../util/util';\n\nconst { Title } = Typography;\n\nconst Invoices = () => {\n\n    const [customers, setCustomers] = useState(null);\n    const [invoices, setInvoices] = useState(null);\n    const [visible, setVisible] = useState(false);\n    const [selectedCustomer, setSelectedCustomer] = useState(null);\n    const [visibleID, setVisibleID] = useState(false);\n    const [selectedInvoiceId, setSelectedInvoiceId] = useState(null);\n\n    const [currentPage, setCurrentPage] = useState(1);\n    const [pageSize, setPageSize] = useState(20);\n    const [total, setTotal] = useState(0);\n\n    const [search, setSearch] = useState('');\n\n    const fetchCustomers = async () => {\n        const response = await getAllCustomers();\n        setCustomers(response?.data?.entity.rows);\n    }\n\n    const fetchInvoices = async () => {\n        const response = await getAllInvoices(search, (currentPage - 1) * pageSize, pageSize);\n        setInvoices(response?.data?.entity.rows.map((inv) => ({\n            ...inv,\n            customerName: inv.customer.name,\n            invoiceDate: inv.invoiceDate? moment(inv.invoiceDate).format('DD-MM-YYYY') : null,\n            paymentDate: inv.paymentDate ? moment(inv.paymentDate).format('DD-MM-YYYY') : null\n        })));\n        setTotal(response?.data?.entity.count);\n    }\n\n    useEffect(() => {\n        fetchCustomers();\n    },[]);\n\n    useEffect(() => {\n        fetchInvoices();\n      },[currentPage, pageSize, search]);\n\n    const openInvoiceDetail = (invoiceId) => {\n        setSelectedInvoiceId(invoiceId);\n        setVisibleID(true);  \n    }\n\n    const getRender = (column) => {\n        if(column.name == 'invoiceNo'){\n            return {\n                render: (invoiceNo, data) => {\n                    console.log('data', data)\n                    return (\n                        <div>\n                            <a onClick={() => openInvoiceDetail(data.id)} className='underline text-blue-900'>\n                            { invoiceNo }\n                            </a>\n                        </div>\n                    )\n                }\n            }\n        }\n        return {};\n    }\n\n    const  onDelete = async (data) => {\n        const isConfirm = confirm('Are you sure you want to delete ?')\n        if(isConfirm){\n            const response = await deleteInvoice(data.id);\n            if(response?.data?.status){\n                sweetalertMessage('Succesfully Deleted')\n            }\n            else{\n                sweetalertValidate('OOPS!! Something went wrong')\n            }\n            fetchInvoices();\n        } \n    }\n\n    const fieldData = InvoiceData;\n    const columns = fieldData.map((column) => ({\n        title:  ( \n            <Typography.Text ellipsis={true} title={column.label}>\n                {column.label}\n            </Typography.Text>\n        ),\n        dataIndex: column.name,\n        key: column.name,\n        width: '150px',\n        ...getRender(column)\n    }));\n\n    columns.push({\n        title: 'Action',\n        key: 'operation',\n        width: 10,\n        render: (data) => {\n            return (\n                <div className=\"float-right\">\n                    \n                    <Button key={'delete'+data.id} type=\"secondary\" onClick={() => onDelete(data)} className=\"ml-2\" title=\"Delete\">\n                        <DeleteOutlined />\n                    </Button>\n                </div>\n            );\n        },\n    });\n\n    const handlePageChange = (page) => {\n        setCurrentPage(page);\n      };\n    \n      const handlePageSizeChange = (current, size) => {\n        setPageSize(size);\n        setCurrentPage(1);\n      };\n  \n    \n      const initpageSizeOptions = [10, 20, 50, 100];\n      const pageSizeOptions = [];\n      while(initpageSizeOptions.length > 0 && initpageSizeOptions[0] < total ){\n          pageSizeOptions.push(initpageSizeOptions[0] + '');\n          initpageSizeOptions.shift();\n      }\n      if(total > 10) pageSizeOptions.push( total + '');\n\n    return (\n        <div  style={{ height: 'calc(100vh - 150px)', overflowY :'auto'}}>\n            <div className=\"site-layout-background p-5\">\n                <Title level={3} style={{color: 'rgba(107, 114, 128, var(--tw-text-opacity))'}} className='border-b-2' >Generate Invoice </Title>\n                <InvoiceForm \n                    customers={customers} \n                    callback={async (customerId, customerData) => {\n                        await fetchInvoices();\n                        setSelectedCustomer(customerData)\n                        setVisible(true);\n                    }}/>\n            </div>\n            <div className=\"site-layout-background p-5 mt-1\">\n                <Title level={3} style={{color: 'rgba(107, 114, 128, var(--tw-text-opacity))'}} className='border-b-2' >Invoices</Title>\n                <div className='mb-2'>\n                    <Row className=\"w-full\">\n                        <Col span={12}>\n                            <Input\n                                placeholder=\"Search...\"\n                                value={search}\n                                onChange={e => setSearch(e.target.value)}\n                            />\n                        </Col>\n                    </Row>\n                </div>\n                <Row className=\"w-full\">\n                    <Col span={24}>\n                        <Table\n                            dataSource={invoices} \n                            columns={columns}\n                            bordered\n                            pagination={{ \n                                position: ['bottomRight', 'topRight'], \n                                pageSizeOptions,\n                                current: currentPage,\n                                pageSize: pageSize,\n                                onChange: handlePageChange,\n                                onShowSizeChange: handlePageSizeChange,\n                                total,\n                                showSizeChanger: true\n                             }}\n                            rowKey={(record) => record.id + (new Date().getTime() + Math.random() * 10000)}\n                        />\n                    </Col>\n                </Row> \n                <PaymentModal visible={visible} setVisible={setVisible} customer={selectedCustomer}  callback={fetchInvoices}/>\n                <InvoiceDetailsModal visible={visibleID} setVisible={setVisibleID} invoiceId={selectedInvoiceId} />\n            </div>\n        </div>\n    );\n};\n\nexport default Invoices;\n","import React, { useEffect, useState } from 'react';\nimport millify from 'millify';\nimport { Typography, Row, Col, Statistic, Table, Button, Input } from 'antd';\nimport { createStocks, getStocks } from '../api';\nimport { SaveOutlined } from '@ant-design/icons';\nimport { sweetalertMessage, sweetalertValidate, uuid } from '../util/util';\n\nconst { Title } = Typography;\n\nconst Stock = () => {\n\n    const [stocks, setStocks] = useState([]);\n\n    const fetchStocks = async () => {\n        const response = await getStocks();\n        console.log(response)\n        setStocks(response?.data?.entity.map((stock) => ({ ...stock, name: stock.milkCategory.name, total: parseFloat(stock.carryForward) + parseFloat(stock.eveningQuantity) + parseFloat(stock.morningQuantity)})));\n    }\n\n    useEffect(() => {\n        fetchStocks();\n    },[]);\n\n    const onChange = (name, value, data) => {\n        const total = parseFloat(data.carryForward || 0 ) + parseFloat(value) + parseFloat(name == 'morningQuantity' ? data.eveningQuantity : data.morningQuantity);\n        document.getElementById(`total_${data.id}`).innerHTML = total;\n    }\n\n    const getRender = (name) => {\n        if(name == 'morningQuantity' || name == 'eveningQuantity'){\n            return {\n                render: (value, data) => {\n                    return (\n                        <Input\n                            onChange={(e) => onChange(name, e.target.value, data)}\n                            defaultValue={value}\n                            type='number'\n                            key={uuid()}\n                            id={`${name}_${data.id}`}\n                        />\n                    )\n                }\n            }\n        }\n        if(name == 'total'){\n            return {\n                render: (value, data) => {\n                    return (\n                        <div className='font-bold' id={`total_${data.id}`}>\n                           {value}\n                        </div>\n                    )\n                }\n            }\n        }\n        return {};\n    }\n\n    const fieldData = [\n        {\n            label: \"Item Name\",\n            name: 'name',\n        },\n        {\n            label: \"Carry Forward\",\n            name: 'carryForward'\n        },\n        {\n            label: \"Morning Quantity\",\n            name: 'morningQuantity',\n        },\n        {\n            label: \"Evening Quantity\",\n            name: 'eveningQuantity',\n        },\n        {\n            label: \"Total\",\n            name: 'total',\n        },\n    ];\n    const columns = fieldData.map((column) => ({\n        title:  ( \n            <Typography.Text ellipsis={true} title={column.label}>\n                {column.label}\n            </Typography.Text>\n        ),\n        dataIndex: column.name,\n        key: column.name,\n        width: '100px',\n        align: column.align ? column.align : 'left',\n        ...getRender(column.name)\n    }));\n\n    const onSave = async () => {\n        const stockData = stocks.map((stock) => ({\n            id: stock.id,\n            categoryId: stock.categoryId,\n            carryForward: stock.carryForward,\n            morningQuantity: document.getElementById(`morningQuantity_${stock.id}`).value,\n            eveningQuantity: document.getElementById(`eveningQuantity_${stock.id}`).value\n        }));\n        console.log(stockData)\n        const response = await createStocks(stockData);\n        console.log(response)\n        if(response?.data?.status == true){\n            sweetalertMessage(\"Succesfully Saved Stock Details\");\n        }\n        else{\n            sweetalertValidate(\"OOPS Something Went wrong\");\n        }\n    }\n\n    return (\n        <>\n            <div className=\"site-layout-background p-5 mt-1\">\n                <Row>\n                    <Col span={12}>\n                        <Title level={3} style={{color: 'rgba(107, 114, 128, var(--tw-text-opacity))'}} className='border-b-2' >Today's Stocks</Title>\n                    </Col>\n                    <Col span={12}>\n                        <Button type=\"primary\" className='float-right' icon={ <SaveOutlined /> } onClick={onSave}> Save </Button>\n                    </Col>\n                </Row>\n               \n                <Row className=\"w-full\">\n                    <Col span={24}>\n                        <Table\n                            dataSource={stocks} \n                            columns={columns}\n                            bordered\n                            scroll={{ y: 'calc(100vh - 300px)' }}\n                            pagination={false}\n                            rowKey={(record) => record.id + (new Date().getTime() + Math.random() * 10000)}\n                        />\n                    </Col>\n                </Row> \n            </div>\n        </>\n    );\n};\n\nexport default Stock;\n","import React, { useState } from 'react';\nimport { Switch, Route, Link } from 'react-router-dom';\nimport 'antd/dist/antd.css';\nimport './index.css';\nimport './App.css';\nimport { Avatar, Breadcrumb, Layout, Menu } from 'antd';\nimport { Customer, Homepage, Navbar, MilkCategory } from './components';\nimport { MailOutlined, NotificationOutlined, UserOutlined } from '@ant-design/icons';\nimport Invoices from './components/Invoices';\nimport Stock from './components/Stock';\n\nconst { Header, Content, Footer, Sider } = Layout;\n\nconst App = () => {\n  const [collapsed, setCollapsed] = useState(false);\n  return (\n    <Layout className='h-screen'>\n      <Sider collapsible collapsed={collapsed} onCollapse={(value) => setCollapsed(value)}>\n        <Navbar />\n      </Sider>\n      <Layout className=\"site-layout\">\n        <Header\n          className=\"site-layout-background\"\n          style={{\n            padding: 0,\n          }}\n        >\n           <Menu mode=\"horizontal\" style={{ float: 'right', width: 'auto'}}>\n              <Menu.Item key=\"notification\" icon={<NotificationOutlined />}>\n              </Menu.Item>\n              <Menu.Item key=\"mail\" icon={<MailOutlined />}>\n              </Menu.Item>\n              <Menu.Item key=\"profile\">\n                <Avatar size={30} icon={<UserOutlined />} />\n              </Menu.Item>\n            </Menu>\n        </Header>\n        <Content style={{ margin: '0 16px' }} >\n          <Breadcrumb style={{ margin: '16px 0'}}>\n            <Breadcrumb.Item>Home</Breadcrumb.Item>\n          </Breadcrumb>\n          <div style={{ padding: 10 }} >\n           <Switch>\n              <Route exact path=\"/\">\n                <Homepage />\n              </Route>\n              <Route exact path=\"/customers\">\n                <Customer />\n              </Route>\n              <Route exact path=\"/milk-category\">\n                <MilkCategory />\n              </Route>\n              <Route exact path=\"/invoices\">\n                <Invoices />\n              </Route>\n              <Route exact path=\"/stocks\">\n                <Stock />\n              </Route>\n            </Switch>\n          </div>\n        </Content>\n      </Layout>\n    </Layout>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport 'antd/dist/antd.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","import { Col, Row } from \"antd\";\n\nconst InputField = ({label , lcol , icol, placeholder, ...inputProps }) => {\n    return (\n        <>\n            \n                <Col span={lcol? lcol : 4} className=\"mb-3\">\n                    <label className=\"block font-semibold mt-5 text-right mr-10\">{label}</label>\n                </Col>\n                <Col span={icol ? icol : 8} className=\"mb-3\">\n                    <input {...inputProps} placeholder={placeholder? placeholder : label} className=\"w-full py-2 px-2 mt-2 border-2\"/>\n                </Col>\n            \n            \n        </>\n    )\n}\n\nexport default InputField;","import { Col, Row, Select } from \"antd\";\nconst { Option } = Select;\n\nconst SelectField = ({label, lcol , icol, option, selected, ...property}) => {\n    return (\n        <>\n                <Col span={lcol? lcol : 4} className=\"mb-3\">\n                    <label className=\"block font-semibold mt-5 text-right mr-10\">{label}</label>\n                </Col>\n                <Col span={icol? icol : 8} className=\"mb-3\">\n                    <div className=\"mt-5\">\n                        <Select className=\"w-full\" placeholder={label} {...property}>\n                            { option.map((ele,index) => <Option value={ele.value} key={index}>{ele.text}</Option>) }\n                        </Select>\n                    </div>\n                </Col> \n        </>\n    )\n}\n\nexport default SelectField"],"sourceRoot":""}